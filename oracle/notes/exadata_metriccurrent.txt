METRIC_CURRENT:
===============

Refer to https://docs.oracle.com/en/engineered-systems/exadata-database-machine/sagug/exadata-storage-server-monitoring.html

GD_BY_FC_DIRTY =>  [GRIDDISK] The number of megabytes cached in flash cache that are not synchronized to the grid disk.
GD_IO_BY_R_LG =>  [GRIDDISK] The cumulative number of megabytes read in large blocks from a grid disk.
GD_IO_BY_R_LG_SEC =>  [GRIDDISK] The rate which is the number of megabytes read in large blocks per second from a grid disk.
GD_IO_BY_R_SCRUB =>  [GRIDDISK] The number of megabytes read from a grid disk by the scrubbing job.
GD_IO_BY_R_SCRUB_SEC =>  [GRIDDISK] The number of megabytes read per second from a grid disk by the scrubbing job.
GD_IO_BY_R_SM =>  [GRIDDISK] The cumulative number of megabytes read in small blocks from a grid disk.
GD_IO_BY_R_SM_SEC =>  [GRIDDISK] The rate which is the number of megabytes read in small blocks per second from a grid disk.
GD_IO_BY_W_LG =>  [GRIDDISK] The cumulative number of megabytes written in large blocks on a grid disk.
GD_IO_BY_W_LG_SEC =>  [GRIDDISK] The rate which is the number of megabytes written in large blocks per second on a grid disk.
GD_IO_BY_W_SM =>  [GRIDDISK] The cumulative number of megabytes written in small blocks on a grid disk.
GD_IO_BY_W_SM_SEC =>  [GRIDDISK] The rate which is the number of megabytes written in small blocks per second on a grid disk.
GD_IO_ERRS =>  [GRIDDISK] The cumulative number of I/O errors on a grid disk.
GD_IO_ERRS_MIN =>  [GRIDDISK] The rate of I/O errors on a grid disk per minute.
GD_IO_ERRS_SCRUB =>  [GRIDDISK] The number of bad 1 MB blocks detected during a scrubbing job on a grid disk.
GD_IO_RQ_R_LG =>  [GRIDDISK] The cumulative number of requests to read large blocks from a grid disk.
GD_IO_RQ_R_LG_SEC =>  [GRIDDISK] The rate which is the number of requests to read large blocks per second from a grid disk.
GD_IO_RQ_R_SCRUB =>  [GRIDDISK] The number of requests to read from a grid disk by the scrubbing job.
GD_IO_RQ_R_SCRUB_SEC =>  [GRIDDISK] The number of requests to read per second from a grid disk by the scrubbing job.
GD_IO_RQ_R_SM =>  [GRIDDISK] The cumulative number of requests to read small blocks from a grid disk.
GD_IO_RQ_R_SM_SEC =>  [GRIDDISK] The rate which is the number of requests to read small blocks per second from a grid disk.
GD_IO_RQ_W_LG =>  [GRIDDISK] The cumulative number of requests to write large blocks to a grid disk.
GD_IO_RQ_W_LG_SEC =>  [GRIDDISK] The rate which is the number of requests to write large blocks per second to a grid disk.
GD_IO_RQ_W_SM =>  [GRIDDISK] The cumulative number of requests to write small blocks to a grid disk.
GD_IO_RQ_W_SM_SEC =>  [GRIDDISK] The rate which is the number of requests to write small blocks per second to a grid disk.
GD_SP_BY_ALLOCATED =>  [GRIDDISK] The allocated physical space for grid disk in bytes.
GD_SP_IO_BY_PARTIAL =>  [GRIDDISK] The bytes returned by partial I/Os.
GD_SP_IO_BY_PARTIAL_SEC =>  [GRIDDISK] The bytes returned by partial I/Os per second.
GD_SP_IO_BY_REDIRECTED =>  [GRIDDISK] The sparse bytes redirected to original data block.
GD_SP_IO_BY_REDIRECTED_SEC =>  [GRIDDISK] The sparse bytes redirected to original data block per second.
GD_SP_IO_RQ_PARTIAL =>  [GRIDDISK] The number of I/O requests that returned partial data.
GD_SP_IO_RQ_PARTIAL_SEC =>  [GRIDDISK] The number of I/O requests that returned partial data per second.
GD_SP_PRCT_ALLOCATED =>  [GRIDDISK] The allocated physical space for grid disk by percentage. A warning alert is generated when space usage is more than 95%. A critical alert is generated when space usage reaches 99%.
DB_PC_BY_ALLOCATED =>  [RAMCACHE] Number of megabytes allocated in PMEM cache for this database.
PC_BY_ALLOCATED =>  [RAMCACHE] The number of megabytes allocated in PMEM cache. Tracks how many cachelines are used in the PMEM cache. If the value is close to the PMEM cache size, then the PMEM cache is fully populated.
N_MB_DROP =>  [INTERCONNECT] The cumulative number of megabytes dropped during transmission to a particular host.
N_MB_DROP_SEC =>  [INTERCONNECT] The rate which is the number of megabytes dropped per second during transmission to a particular host.
N_MB_RDMA_DROP =>  [INTERCONNECT] The cumulative number of megabytes dropped during remote direct memory access (RDMA) transmission to a particular host.
N_MB_RDMA_DROP_SEC =>  [INTERCONNECT] The rate which is the number of megabytes dropped per second during RDMA transmission to a particular host.
N_MB_RECEIVED =>  [INTERCONNECT] The cumulative number of megabytes received from a particular host.
N_MB_RECEIVED_SEC =>  [INTERCONNECT] The rate which is the number of megabytes received per second from a particular host.
N_MB_RESENT =>  [INTERCONNECT] The cumulative number of megabytes retransmitted to a particular host.
N_MB_RESENT_SEC =>  [INTERCONNECT] The rate which is the number of megabytes retransmitted per second to a particular host.
N_MB_SENT =>  [INTERCONNECT] The cumulative number of megabytes transmitted to a particular host.
N_MB_SENT_SEC =>  [INTERCONNECT] The rate which is the number of megabytes transmitted per second to a particular host.
N_RDMA_RETRY_TM =>  [INTERCONNECT] The cumulative latency of the retry action during RDMA transmission to a particular host.
SIO_IO_EL_OF =>  [SmartIO] The cumulative number of megabytes eligible for offload by smart I/O.
SIO_IO_EL_OF_SEC =>  [SmartIO] The number of megabytes per second eligible for offload by smart I/O.
SIO_IO_OF_RE =>  [SmartIO] The cumulative number of interconnect megabytes returned by smart I/O.
SIO_IO_OF_RE_SEC =>  [SmartIO] The number of interconnect megabytes per second returned by smart I/O.
SIO_IO_PA_TH =>  [SmartIO] The cumulative number of megabytes of pass-through I/O by smart I/O.
SIO_IO_PA_TH_SEC =>  [SmartIO] The number of megabytes per second of pass-through I/O by smart I/O.
SIO_IO_RD_FC =>  [SmartIO] The cumulative number of megabytes read from flash cache by smart I/O.
SIO_IO_RD_FC_HD =>  [SmartIO] The cumulative number of megabytes read from both flash cache and hard disk by smart I/O.
SIO_IO_RD_FC_HD_SEC =>  [SmartIO] The number of megabytes per second read from both flash cache and hard disk by smart I/O.
SIO_IO_RD_FC_SEC =>  [SmartIO] The number of megabytes per second read from flash cache by smart I/O.
SIO_IO_RD_HD =>  [SmartIO] The cumulative number of megabytes read from hard disk by smart I/O.
SIO_IO_RD_HD_SEC =>  [SmartIO] The number of megabytes per second read from hard disk by smart I/O.
SIO_IO_RD_RQ_FC =>  [SmartIO] The cumulative number of read I/O requests from flash cache by smart I/O.
SIO_IO_RD_RQ_FC_HD =>  [SmartIO] The cumulative number of read I/O requests from both flash cache and hard disk by smart I/O.
SIO_IO_RD_RQ_FC_HD_SEC =>  [SmartIO] The number of read I/O requests per second from both flash cache and hard disk by smart I/O.
SIO_IO_RD_RQ_FC_SEC =>  [SmartIO] The number of read I/O requests per second from flash cache by smart I/O.
SIO_IO_RD_RQ_HD =>  [SmartIO] The cumulative number of megabytes read I/O requests from hard disk by smart I/O.
SIO_IO_RD_RQ_HD_SEC =>  [SmartIO] The number of read I/O requests per second from hard disk by smart I/O.
SIO_IO_RV_OF =>  [SmartIO] The cumulative number of megabytes sent to the database node to balance CPU by smart I/O.
SIO_IO_RV_OF_SEC =>  [SmartIO] The number of megabytes per second sent to the database node to balance CPU by smart I/O.
SIO_IO_SI_SV =>  [SmartIO] The cumulative number of megabytes saved by the storage index.
SIO_IO_SI_SV_SEC =>  [SmartIO] The number of megabytes per second saved by the storage index.
SIO_IO_WR_FC =>  [SmartIO] The cumulative number of megabytes of flash cache population writes by smart I/O.
SIO_IO_WR_FC_SEC =>  [SmartIO] The number of megabytes per second of flash cache population writes by smart I/O.
SIO_IO_WR_HD =>  [SmartIO] The cumulative number of megabytes written to hard disk by smart I/O.
SIO_IO_WR_HD_SEC =>  [SmartIO] The number of megabytes per second written to hard disk by smart I/O.
SIO_IO_WR_RQ_FC =>  [SmartIO] The cumulative number of I/O requests for flash cache population writes by smart I/O.
SIO_IO_WR_RQ_FC_SEC =>  [SmartIO] The number of I/O requests per second for flash cache population writes by smart I/O.
SIO_IO_WR_RQ_HD =>  [SmartIO] The cumulative number of write I/O requests to hard disk by smart I/O.
SIO_IO_WR_RQ_HD_SEC =>  [SmartIO] The number of write I/O requests per second to hard disk by smart I/O.
CT_FC_IO_BY_SEC =>  [IORM] The number of megabytes of I/O per second for this category to flash cache.
CT_FC_IO_RQ =>  [IORM] The number of I/O requests issued by an IORM category to flash cache.
CT_FC_IO_RQ_LG =>  [IORM] The number of large I/O requests issued by an IORM category to flash cache.
CT_FC_IO_RQ_LG_SEC =>  [IORM] The number of large I/O requests issued by an IORM category to flash cache per second.
CT_FC_IO_RQ_SEC =>  [IORM] The number of I/O requests issued by an IORM category to flash cache per second.
CT_FC_IO_RQ_SM =>  [IORM] The number of small I/O requests issued by an IORM category to flash cache.
CT_FC_IO_RQ_SM_SEC =>  [IORM] The number of small I/O requests issued by an IORM category to flash cache per second.
CT_FD_IO_BY_SEC =>  [IORM] The number of megabytes of I/O per second for this category to flash disks.
CT_FD_IO_LOAD =>  [IORM] The average I/O load from this category for flash disks. For a description of I/O load, see "CD_IO_LOAD".
CT_FD_IO_RQ_LG =>  [IORM] The number of large I/O requests issued by an IORM category to flash disks.
CT_FD_IO_RQ_LG_SEC =>  [IORM] The number of large I/O requests issued by an IORM category to flash disks per second.
CT_FD_IO_RQ_SM =>  [IORM] The number of small I/O requests issued by an IORM category to flash disks.
CT_FD_IO_RQ_SM_SEC =>  [IORM] The number of small I/O requests issued by an IORM category to flash disks per second.
CT_FD_IO_TM =>  [IORM] The cumulative latency of reading or writing blocks for this category from flash disks.
CT_FD_IO_TM_LG =>  [IORM] The cumulative latency of reading or writing large blocks for this category from flash disks.
CT_FD_IO_TM_LG_RQ =>  [IORM] The rate which is the average latency of reading or writing large blocks per request for this category from flash disks.
CT_FD_IO_TM_RQ =>  [IORM] The rate which is the average latency of reading or writing blocks per request for this category from flash disks.
CT_FD_IO_TM_SM =>  [IORM] The cumulative latency of reading or writing small blocks for this category from flash disks.
CT_FD_IO_TM_SM_RQ =>  [IORM] The rate which is the average latency of reading or writing small blocks per request for this category from flash disks.
CT_FD_IO_UTIL =>  [IORM] The percentage of flash resources utilized from this category.
CT_FD_IO_UTIL_LG =>  [IORM] The percentage of flash resources utilized by large requests from this category.
CT_FD_IO_UTIL_SM =>  [IORM] The percentage of flash resources utilized by small requests from this category.
CT_FD_IO_WT_LG =>  [IORM] The IORM wait time for large I/O requests issued to flash disks by an IORM category.
CT_FD_IO_WT_LG_RQ =>  [IORM] The average IORM wait time per request for large I/O requests issued to flash disks by an IORM category.
CT_FD_IO_WT_SM =>  [IORM] The IORM wait time for small I/O requests issued to flash disks by an IORM category.
CT_FD_IO_WT_SM_RQ =>  [IORM] The average IORM wait time per request for small I/O requests issued to flash disks by an IORM category.
CT_IO_BY_SEC =>  [IORM] The number of megabytes of I/O per second for this category to hard disks.
CT_IO_LOAD =>  [IORM] The average I/O load from this category for hard disks. For a description of I/O load, see "CD_IO_LOAD".
CT_IO_RQ_LG =>  [IORM] The cumulative number of large I/O requests issued by the category for hard disks. A large value indicates a heavy I/O workload from this category.
CT_IO_RQ_LG_SEC =>  [IORM] This metric is derived from CT_IO_RQ_LG. It specifies the rate of large I/O requests issued by the category for hard disks. Its units are number of I/O requests per second. A large value indicates a heavy I/O workload from this category in the past minute.
CT_IO_RQ_SM =>  [IORM] The cumulative number of small I/O requests issued by the category for hard disks. A large value indicates a heavy I/O workload from this category.
CT_IO_RQ_SM_SEC =>  [IORM] This metric is derived from CT_IO_RQ_SM. It specifies the rate of small I/O requests issued by the category for hard disks. Its units are number of I/O requests per second. A large value indicates a heavy I/O workload from this category in the past minute.
CT_IO_TM_LG =>  [IORM] The cumulative latency of reading or writing large blocks for this category from hard disks.
CT_IO_TM_LG_RQ =>  [IORM] The rate which is the average latency of reading or writing large blocks per request for this category from hard disks.
CT_IO_TM_SM =>  [IORM] The cumulative latency of reading or writing small blocks for this category from hard disks.
CT_IO_TM_SM_RQ =>  [IORM] The rate which is the average latency of reading or writing small blocks per request for this category from hard disks.
CT_IO_UTIL_LG =>  [IORM] The percentage of disk resources utilized by large requests from this category.
CT_IO_UTIL_SM =>  [IORM] The percentage of disk resources utilized by small requests from this category.
CT_IO_WT_LG =>  [IORM] The cumulative number of milliseconds that large I/O requests issued to hard disks by the category have waited to be scheduled by IORM. A large value indicates that the I/O workload from this category is exceeding the allocation specified for it in the category plan.
CT_IO_WT_LG_RQ =>  [IORM] The average IORM wait time per request for large I/O requests issued to hard disks by an IORM category.
CT_IO_WT_SM =>  [IORM] The cumulative number of milliseconds that small I/O requests issued to hard disks by the category have waited to be scheduled by IORM. A large value indicates that the I/O workload from this category is exceeding the allocation specified for it in the category plan.
CT_IO_WT_SM_RQ =>  [IORM] The average IORM wait time per request for small I/O requests issued to hard disks by an IORM category.
PDB_FC_BY_ALLOCATED =>  [PDB-IORM] The number of megabytes allocated in flash cache for this PDB.
PDB_FC_IO_BY_SEC =>  [PDB-IORM] The number of megabytes of I/O per second for the PDB to flash cache.
PDB_FC_IO_RQ =>  [PDB-IORM] The number of I/O requests issued by this PDB to flash cache.
PDB_FC_IO_RQ_LG =>  [PDB-IORM] The number of large I/O requests issued by this PDB to flash cache.
PDB_FC_IO_RQ_LG_SEC =>  [PDB-IORM] The number of large I/O requests issued by this PDB to flash cache per second.
PDB_FC_IO_RQ_SEC =>  [PDB-IORM] The number of I/O requests issued by this PDB to flash cache per second.
PDB_FC_IO_RQ_SM =>  [PDB-IORM] The number of small I/O requests issued by this PDB to flash cache.
PDB_FC_IO_RQ_SM_SEC =>  [PDB-IORM] The number of small IO requests issued by this PDB to flash cache per second.
PDB_FD_IO_BY_SEC =>  [PDB-IORM] The number of megabytes of I/O per second for the PDB to flash disks.
PDB_FD_IO_LOAD =>  [PDB-IORM] The average I/O load from this PDB for flash disks. For a description of I/O load, see CD_IO_LOAD.
PDB_FD_IO_RQ_LG =>  [PDB-IORM] The number of large I/O requests issued by a PDB to flash disks.
PDB_FD_IO_RQ_LG_SEC =>  [PDB-IORM] The number of large I/O requests issued by a PDB to flash disks per second.
PDB_FD_IO_RQ_SM =>  [PDB-IORM] The number of small I/O requests issued by a PDB to flash disks.
PDB_FD_IO_RQ_SM_SEC =>  [PDB-IORM] The number of small I/O requests issued by a PDB to flash disks per second.
PDB_FD_IO_TM =>  [PDB-IORM] The cumulative latency of reading or writing blocks by this PDB from flash disks.
PDB_FD_IO_TM_LG =>  [PDB-IORM] The cumulative latency of reading or writing large blocks by this PDB from flash disks.
PDB_FD_IO_TM_LG_RQ =>  [PDB-IORM] The rate which is the average latency of reading or writing large blocks per request by this PDB from flash disks.
PDB_FD_IO_TM_RQ =>  [PDB-IORM] The rate which is the average latency of reading or writing blocks per request by this PDB from flash disks.
PDB_FD_IO_TM_SM =>  [PDB-IORM] The cumulative latency of reading or writing small blocks by this PDB from flash disks.
PDB_FD_IO_TM_SM_RQ =>  [PDB-IORM] The rate which is the average latency of reading or writing small blocks per request by this PDB from flash disks.
PDB_FD_IO_UTIL =>  [PDB-IORM] The percentage of flash resources utilized from this PDB.
PDB_FD_IO_UTIL_LG =>  [PDB-IORM] The percentage of flash resources utilized by large requests from this PDB.
PDB_FD_IO_UTIL_SM =>  [PDB-IORM] The percentage of flash resources utilized by small requests from this PDB.
PDB_FD_IO_WT_LG =>  [PDB-IORM] The IORM wait time for large I/O requests issued to flash disks by this PDB.
PDB_FD_IO_WT_LG_RQ =>  [PDB-IORM] The average IORM wait time per request for large I/O requests issued to flash disks by this PDB.
PDB_FD_IO_WT_SM =>  [PDB-IORM] The IORM wait time for small I/O requests issued to flash disks by this PDB.
PDB_FD_IO_WT_SM_RQ =>  [PDB-IORM] The average IORM wait time per request for small I/O requests issued to flash disks by this PDB.
PDB_IO_BY_SEC =>  [PDB-IORM] The number of megabytes of I/O per second for the PDB to hard disks.
PDB_IO_LOAD =>  [PDB-IORM] The average I/O load from this PDB for hard disks. For a description of I/O load, see "CD_IO_LOAD".
PDB_IO_RQ_LG =>  [PDB-IORM] The cumulative number of large I/O requests issued by the PDB to hard disks. A large value indicates a heavy large I/O workload from this PDB.
PDB_IO_RQ_LG_SEC =>  [PDB-IORM] The rate of large I/O requests issued by a PDB per second over the past minute to hard disks. A large value indicates a heavy, large I/O workload from this PDB in the past minute.
PDB_IO_RQ_SM =>  [PDB-IORM] The cumulative number of small I/O requests issued by the PDB to hard disks. A large value indicates a heavy small I/O workload from this PDB.
PDB_IO_RQ_SM_SEC =>  [PDB-IORM] The rate of small I/O requests issued by a PDB per second over the past minute to hard disks. A large value indicates a heavy, small I/O workload issued by this PDB in the past minute.
PDB_IO_TM_LG =>  [PDB-IORM] The cumulative latency of reading or writing large blocks by this PDB from hard disks.
PDB_IO_TM_LG_RQ =>  [PDB-IORM] The rate which is the average latency of reading or writing large blocks per request by this PDB from hard disks.
PDB_IO_TM_SM =>  [PDB-IORM] The cumulative latency of reading or writing small blocks by this PDB from hard disks.
PDB_IO_TM_SM_RQ =>  [PDB-IORM] The rate which is the average latency of reading or writing small blocks per request by this PDB from hard disks.
PDB_IO_UTIL_LG =>  [PDB-IORM] The percentage of disk resources utilized by large requests from this PDB.
PDB_IO_UTIL_SM =>  [PDB-IORM] The percentage of disk resources utilized by small requests from this PDB.
PDB_IO_WT_LG =>  [PDB-IORM] The IORM wait time for large I/O requests issued to hard disks by this PDB.
PDB_IO_WT_LG_RQ =>  [PDB-IORM] The average IORM wait time per request for large I/O requests issued to hard disks by this PDB.
PDB_IO_WT_SM =>  [PDB-IORM] The IORM wait time for small I/O requests issued to hard disks by this PDB.
PDB_IO_WT_SM_RQ =>  [PDB-IORM] The average IORM wait time per request for small I/O requests issued to hard disks by this PDB.
PDB_PC_BY_ALLOCATED =>  [PDB-IORM] Number of megabytes allocated in PMEM cache for this PDB.
DB_FC_BY_ALLOCATED =>  [DB-IORM] The number of megabytes allocated in flash cache for this database.
DB_FC_IO_BY_SEC =>  [DB-IORM] The number of megabytes of I/O per second for this database to flash cache.
DB_FC_IO_RQ =>  [DB-IORM] The number of I/O requests issued by a database to flash cache.
DB_FC_IO_RQ_LG =>  [DB-IORM] The number of large I/O requests issued by a database to flash cache.
DB_FC_IO_RQ_LG_SEC =>  [DB-IORM] The number of large I/O requests issued by a database to flash cache per second.
DB_FC_IO_RQ_SEC =>  [DB-IORM] The number of I/O requests issued by a database to flash cache per second.
DB_FC_IO_RQ_SM =>  [DB-IORM] The number of small I/O requests issued by a database to flash cache.
DB_FC_IO_RQ_SM_SEC =>  [DB-IORM] The number of small I/O requests issued by a database to flash cache per second.
DB_FD_IO_BY_SEC =>  [DB-IORM] The number of megabytes of I/O per second for this database to flash disks.
DB_FD_IO_LOAD =>  [DB-IORM] The average I/O load from this database for flash disks. For a description of I/O load, see CD_IO_LOAD.
DB_FD_IO_RQ_LG =>  [DB-IORM] The number of large I/O requests issued by a database to flash disks.
DB_FD_IO_RQ_LG_SEC =>  [DB-IORM] The number of large I/O requests issued by a database to flash disks per second.
DB_FD_IO_RQ_SM =>  [DB-IORM] The number of small I/O requests issued by a database to flash disks.
DB_FD_IO_RQ_SM_SEC =>  [DB-IORM] The number of small I/O requests issued by a database to flash disks per second.
DB_FD_IO_TM =>  [DB-IORM] The cumulative latency of reading or writing blocks by a database from flash disks.
DB_FD_IO_TM_LG =>  [DB-IORM] The cumulative latency of reading or writing large blocks by a database from flash disks.
DB_FD_IO_TM_LG_RQ =>  [DB-IORM] The rate which is the average latency of reading or writing large blocks per request by a database from flash disks.
DB_FD_IO_TM_RQ =>  [DB-IORM] The rate which is the average latency of reading or writing blocks per request by a database from flash disks.
DB_FD_IO_TM_SM =>  [DB-IORM] The cumulative latency of reading or writing small blocks by a database from flash disks.
DB_FD_IO_TM_SM_RQ =>  [DB-IORM] The rate which is the average latency of reading or writing small blocks per request by a database from flash disks.
DB_FD_IO_UTIL =>  [DB-IORM] The percentage of flash resources utilized from this database.
DB_FD_IO_UTIL_LG =>  [DB-IORM] The percentage of flash resources utilized by large requests from this database.
DB_FD_IO_UTIL_SM =>  [DB-IORM] The percentage of flash resources utilized by small requests from this database.
DB_FD_IO_WT_LG =>  [DB-IORM] The IORM wait time for large I/O requests issued to flash disks by a database.
DB_FD_IO_WT_LG_RQ =>  [DB-IORM] The average IORM wait time per request for large I/O requests issued to flash disks by a database.
DB_FD_IO_WT_SM =>  [DB-IORM] The IORM wait time for small I/O requests issued to flash disks by a database.
DB_FD_IO_WT_SM_RQ =>  [DB-IORM] The average IORM wait time per request for small I/O requests issued to flash disks by a database.
DB_FL_IO_BY =>  [DB-IORM] The number of megabytes written to Exadata Smart Flash Log.
DB_FL_IO_BY_SEC =>  [DB-IORM] The number of megabytes written per second to Exadata Smart Flash Log.
DB_FL_IO_RQ =>  [DB-IORM] The number of I/O requests issued to Exadata Smart Flash Log.
DB_FL_IO_RQ_SEC =>  [DB-IORM] The number of I/O requests per second issued to Exadata Smart Flash Log.
DB_IO_BY_SEC =>  [DB-IORM] The number of megabytes of I/O per second for this database to hard disks.
DB_IO_LOAD =>  [DB-IORM] The average I/O load from this database for hard disks. For a description of I/O load, see CD_IO_LOAD.
DB_IO_RQ_LG =>  [DB-IORM] The cumulative number of large I/O requests issued to hard disks by the database. A large value indicates a heavy large I/O workload from this database.
DB_IO_RQ_LG_SEC =>  [DB-IORM] The rate of large I/O requests issued to hard disks by a database per second over the past minute. A large value indicates a heavy large I/O workload from this database in the past minute.
DB_IO_RQ_SM =>  [DB-IORM] The cumulative number of small I/O requests issued to hard disks by the database. A large value indicates a heavy small I/O workload from this database.
DB_IO_RQ_SM_SEC =>  [DB-IORM] The rate of small I/O requests issued to hard disks by a database per second over the past minute. A large value indicates a heavy small I/O workload issued by this database in the past minute.
DB_IO_TM_LG =>  [DB-IORM] The cumulative latency of reading or writing large blocks by a database from hard disks.
DB_IO_TM_LG_RQ =>  [DB-IORM] The rate which is the average latency of reading or writing large blocks per request by a database from hard disks.
DB_IO_TM_SM =>  [DB-IORM] The cumulative latency of reading or writing small blocks by a database from hard disks.
DB_IO_TM_SM_RQ =>  [DB-IORM] The rate which is the average latency of reading or writing small blocks per request by a database from hard disks.
DB_IO_UTIL_LG =>  [DB-IORM] The percentage of hard disk resources utilized by large requests from this database.
DB_IO_UTIL_SM =>  [DB-IORM] The percentage of hard disk resources utilized by small requests from this database.
DB_IO_WT_LG =>  [DB-IORM] The IORM wait time for large I/O requests issued to hard disks by a database.
DB_IO_WT_LG_RQ =>  [DB-IORM] The average IORM wait time per request for large I/O requests issued to hard disks by a database.
DB_IO_WT_SM =>  [DB-IORM] The IORM wait time for small I/O requests issued to hard disks by a database.
DB_IO_WT_SM_RQ =>  [DB-IORM] The average IORM wait time per request for small I/O requests issued to hard disks by a database.
DB_PC_BY_ALLOCATED =>  [DB-IORM] Number of megabytes allocated in PMEM cache for this database.
CG_FC_IO_BY_SEC =>  [ConsumerGroup-IORM] The number of megabytes of I/O per second for this consumer group to flash cache.
CG_FC_IO_RQ =>  [ConsumerGroup-IORM] The number of I/O requests issued by a consumer group to flash cache.
CG_FC_IO_RQ_LG =>  [ConsumerGroup-IORM] The number of large I/O requests issued by a consumer group to flash cache.
CG_FC_IO_RQ_LG_SEC =>  [ConsumerGroup-IORM] The number of large I/O requests issued by a consumer group to flash cache per second.
CG_FC_IO_RQ_SEC =>  [ConsumerGroup-IORM] The number of I/O requests issued by a consumer group to flash cache per second.
CG_FC_IO_RQ_SM =>  [ConsumerGroup-IORM] The number of small I/O requests issued by a consumer group to flash cache.
CG_FC_IO_RQ_SM_SEC =>  [ConsumerGroup-IORM] The number of small I/O requests issued by a consumer group to flash cache per second.
CG_FD_IO_BY_SEC =>  [ConsumerGroup-IORM] The number of megabytes of I/O per second for this consumer group to flash disks.
CG_FD_IO_LOAD =>  [ConsumerGroup-IORM] The metric shows the average I/O load from this consumer group for flash disks. For a description of I/O load, see CD_IO_LOAD.
CG_FD_IO_RQ_LG =>  [ConsumerGroup-IORM] The number of large I/O requests issued by a consumer group to flash disks.
CG_FD_IO_RQ_LG_SEC =>  [ConsumerGroup-IORM] The number of large I/O requests issued by a consumer group to flash disks per second.
CG_FD_IO_RQ_SM =>  [ConsumerGroup-IORM] The number of small I/O requests issued by a consumer group to flash disks.
CG_FD_IO_RQ_SM_SEC =>  [ConsumerGroup-IORM] The number of small I/O requests issued by a consumer group to flash disks per second.
CG_FD_IO_TM =>  [ConsumerGroup-IORM] The cumulative latency of reading or writing blocks by a consumer group from flash disks.
CG_FD_IO_TM_LG =>  [ConsumerGroup-IORM] The cumulative latency of reading or writing large blocks by a consumer group from flash disks.
CG_FD_IO_TM_LG_RQ =>  [ConsumerGroup-IORM] The rate which is the average latency of reading or writing large blocks per request by a consumer group from flash disks.
CG_FD_IO_TM_RQ =>  [ConsumerGroup-IORM] The rate which is the average latency of reading or writing blocks per request by a consumer group from flash disks.
CG_FD_IO_TM_SM =>  [ConsumerGroup-IORM] The cumulative latency of reading or writing small blocks by a consumer group from flash disks.
CG_FD_IO_TM_SM_RQ =>  [ConsumerGroup-IORM] The rate which is the average latency of reading or writing small blocks per request by a consumer group from flash disks.
CG_FD_IO_UTIL =>  [ConsumerGroup-IORM] The percentage of flash resources utilized from this consumer group.
CG_FD_IO_UTIL_LG =>  [ConsumerGroup-IORM] The percentage of flash resources utilized by large requests from this consumer group.
CG_FD_IO_UTIL_SM =>  [ConsumerGroup-IORM] The percentage of flash resources utilized by small requests from this consumer group.
CG_FD_IO_WT_LG =>  [ConsumerGroup-IORM] The IORM wait time for large I/O requests issued to flash disks by a consumer group.
CG_FD_IO_WT_LG_RQ =>  [ConsumerGroup-IORM] The average IORM wait time per request for large I/O requests issued to flash disks by a consumer group.
CG_FD_IO_WT_SM =>  [ConsumerGroup-IORM] The IORM wait time for small I/O requests issued to flash disks by a consumer group.
CG_FD_IO_WT_SM_RQ =>  [ConsumerGroup-IORM] The average IORM wait time per request for small I/O requests issued to flash disks by a consumer group.
CG_IO_BY_SEC =>  [ConsumerGroup-IORM] The number of megabytes of I/O per second for this consumer group to hard disks.
CG_IO_LOAD =>  [ConsumerGroup-IORM] The metric shows the average I/O load from this consumer group for hard disks. For a description of I/O load, see CD_IO_LOAD.
CG_IO_RQ_LG =>  [ConsumerGroup-IORM] The cumulative number of large I/O requests issued by the consumer group. A large value indicates a heavy I/O workload from this consumer group.
CG_IO_RQ_LG_SEC =>  [ConsumerGroup-IORM] This metric is derived from CG_IO_RQ_LG. It specifies the rate of large I/O requests issued by a consumer group per second over the past minute. A large value indicates a heavy I/O workload from this consumer group in the past minute.
CG_IO_RQ_SM =>  [ConsumerGroup-IORM] The cumulative number of small I/O requests issued by the consumer group. A large value indicates a heavy I/O workload from this consumer group.
CG_IO_RQ_SM_SEC =>  [ConsumerGroup-IORM] This metric is derived from CG_IO_RQ_SM. It specifies the rate of small I/O requests issued by a consumer group per second over the past minute. A large value indicates a heavy I/O workload from this consumer group in the past minute.
CG_IO_TM_LG =>  [ConsumerGroup-IORM] The cumulative latency of reading or writing large blocks by a consumer group from hard disks.
CG_IO_TM_LG_RQ =>  [ConsumerGroup-IORM] The rate which is the average latency of reading or writing large blocks per request by a consumer group from hard disks.
CG_IO_TM_SM =>  [ConsumerGroup-IORM] The cumulative latency of reading or writing small blocks by a consumer group from hard disks
CG_IO_TM_SM_RQ =>  [ConsumerGroup-IORM] The rate which is the average latency of reading or writing small blocks per request by a consumer group from hard disks.
CG_IO_UTIL_LG =>  [ConsumerGroup-IORM] The percentage of disk resources utilized by large requests from this consumer group.
CG_IO_UTIL_SM =>  [ConsumerGroup-IORM] The percentage of disk resources utilized by small requests from this consumer group.
CG_IO_WT_LG =>  [ConsumerGroup-IORM] The IORM wait time for large I/O requests issued to hard disks by a consumer group.
CG_IO_WT_LG_RQ =>  [ConsumerGroup-IORM] The average IORM wait time per request for large I/O requests issued to hard disks by a consumer group.
CG_IO_WT_SM =>  [ConsumerGroup-IORM] The IORM wait time for small I/O requests issued to hard disks by a consumer group.
CG_IO_WT_SM_RQ =>  [ConsumerGroup-IORM] The average IORM wait time per request for small I/O requests issued to hard disks by a consumer group.
CL_BBU_CHARGE =>  [CELL] Disk controller battery charge.
CL_BBU_TEMP =>  [CELL] Temperature of disk controller battery.
CL_CPUT =>  [CELL] The cell CPU utilization which is the instantaneous percentage of time over the previous minute that the system CPUs were not idle (from /proc/stat).
CL_CPUT_CS =>  [CELL] The percentage of CPU time used by CELLSRV.
CL_CPUT_MS =>  [CELL] The percentage of CPU time used by MS.
CL_FANS =>  [CELL] The instantaneous number of working fans on the cell.
CL_FSUT =>  [CELL] The percentage of total space utilized on the file system that is currently in use. This metric shows the space utilization in the various files systems on the cell.
CL_IO_RQ_NODATA =>  [CELL] The number of I/O requests that did not return data.
CL_IO_RQ_NODATA_SEC =>  [CELL] The number of I/O requests that did not return data per second.
CL_MEMUT =>  [CELL] The percentage of total physical memory used on the cell.
CL_MEMUT_CS =>  [CELL] The percentage of physical memory used by CELLSRV.
CL_MEMUT_MS =>  [CELL] The percentage of physical memory used by MS.
CL_RUNQ =>  [CELL] The instantaneous average number (over the preceding minute) of processes in the Linux run queue marked running or uninterruptible (from /proc/loadavg).
CL_SWAP_IN_BY_SEC =>  [CELL] The number of swap pages read in KB per second.
CL_SWAP_OUT_BY_SEC =>  [CELL] The number of swap pages written in KB per second.
CL_SWAP_USAGE =>  [CELL] The percentage of swap space used.
CL_TEMP =>  [CELL] The instantaneous temperature (Celsius) of the server, provided by the Baseboard Management Controller (BMC).
CL_VIRTMEM_CS =>  [CELL] The amount of virtual memory used by CELLSRV in megabytes.
CL_VIRTMEM_MS =>  [CELL] Total memory(resident and swap) used by MS in megabytes.
IORM_MODE =>  [CELL] The I/O Resource Management (IORM) objective for the cell.
N_HCA_MB_RCV_SEC =>  [CELL] The number of megabytes received by the InfiniBand interfaces per second.
N_HCA_MB_TRANS_SEC =>  [CELL] The number of megabytes transmitted by the InfiniBand interfaces per second.
N_NIC_KB_RCV_SEC =>  [CELL] The number of kilobytes received by the Ethernet interfaces per second.
N_NIC_KB_TRANS_SEC =>  [CELL] The number of kilobytes transmitted by the Ethernet interfaces per second.
N_NIC_RCV_SEC =>  [CELL] The rate which is the total number of I/O packets received by interconnections per second.
N_NIC_TRANS_SEC =>  [CELL] The rate which is the total number of I/O packets transmitted by interconnections per second.
CD_BY_FC_DIRTY =>  [CELLDISK] The number of megabytes in flash cache that are not synchronized to the cell disk.
CD_IO_BY_R_LG =>  [CELLDISK] The cumulative number of megabytes read in large blocks from a cell disk.
CD_IO_BY_R_LG_SEC =>  [CELLDISK] The rate which is the number of megabytes read in large blocks per second from a cell disk.
CD_IO_BY_R_SCRUB =>  [CELLDISK] The number of megabytes read from a cell disk by the scrubbing job.
CD_IO_BY_R_SCRUB_SEC =>  [CELLDISK] The number of megabytes read per second from a cell disk by the scrubbing job.
CD_IO_BY_R_SM =>  [CELLDISK] The cumulative number of megabytes read in small blocks from a cell disk.
CD_IO_BY_R_SM_SEC =>  [CELLDISK] The rate which is the number of megabytes read in small blocks per second from a cell disk.
CD_IO_BY_W_LG =>  [CELLDISK] The cumulative number of megabytes written in large blocks on a cell disk.
CD_IO_BY_W_LG_SEC =>  [CELLDISK] The rate which is the number of megabytes written in large blocks per second on a cell disk.
CD_IO_BY_W_SM =>  [CELLDISK] The cumulative number of megabytes written in small blocks on a cell disk.
CD_IO_BY_W_SM_SEC =>  [CELLDISK] The rate which is the number of megabytes written in small blocks per second on a cell disk.
CD_IO_ERRS =>  [CELLDISK] The cumulative number of I/O errors on a cell disk.
CD_IO_ERRS_MIN =>  [CELLDISK] The rate of I/O errors on a cell disk per minute.
CD_IO_ERRS_SCRUB =>  [CELLDISK] The number of bad 1 MB blocks detected during a scrubbing job on a cell disk.
CD_IO_LOAD =>  [CELLDISK] The average I/O load from cell disks.
CD_IO_RQ_R_LG =>  [CELLDISK] The cumulative number of requests to read large blocks from a cell disk.
CD_IO_RQ_R_LG_SEC =>  [CELLDISK] The rate which is the number of requests to read large blocks per second from a cell disk.
CD_IO_RQ_R_SCRUB =>  [CELLDISK] The number of requests to read from a cell disk by the scrubbing job.
CD_IO_RQ_R_SCRUB_SEC =>  [CELLDISK] The number of requests to read per second from a cell disk by the scrubbing job.
CD_IO_RQ_R_SM =>  [CELLDISK] The cumulative number of requests to read small blocks from a cell disk.
CD_IO_RQ_R_SM_SEC =>  [CELLDISK] The rate which is the number of requests to read small blocks per second from a cell disk.
CD_IO_RQ_W_LG =>  [CELLDISK] The cumulative number of requests to write large blocks to a cell disk.
CD_IO_RQ_W_LG_SEC =>  [CELLDISK] The rate which is the number of requests to write large blocks per second to a cell disk.
CD_IO_RQ_W_SM =>  [CELLDISK] The cumulative number of requests to write small blocks to a cell disk.
CD_IO_RQ_W_SM_SEC =>  [CELLDISK] The rate which is the number of requests to write small blocks per second to a cell disk.
CD_IO_ST_RQ =>  [CELLDISK] Average service time per request for small I/O requests to a cell disk. This metric cannot be used for flash devices as explained in Using iostat to monitor I/O service time statistics.
CD_IO_TM_R_LG =>  [CELLDISK] The cumulative latency of reading large blocks from a cell disk. Units are microseconds per request.
CD_IO_TM_R_LG_RQ =>  [CELLDISK] The rate which is the average latency of reading large blocks per request to a cell disk. Units are microseconds per request.
CD_IO_TM_R_SM =>  [CELLDISK] The cumulative latency of reading small blocks from a cell disk.
CD_IO_TM_R_SM_RQ =>  [CELLDISK] The rate which is the average latency of reading small blocks per request from a cell disk. Units are microseconds per request.
CD_IO_TM_W_LG =>  [CELLDISK] The cumulative latency of writing large blocks to a cell disk. Units are microseconds per request.
CD_IO_TM_W_LG_RQ =>  [CELLDISK] The rate which is the average latency of writing large blocks per request to a cell disk. Units are microseconds per request.
CD_IO_TM_W_SM =>  [CELLDISK] The cumulative latency of writing small blocks to a cell disk. Units are microseconds per request.
CD_IO_TM_W_SM_RQ =>  [CELLDISK] The rate which is the average latency of writing small blocks per request to a cell disk. Units are microseconds per request.
CD_IO_UTIL =>  [CELLDISK] The percentage of device utilization for the cell disk.
CD_IO_UTIL_LG =>  [CELLDISK] The percentage of disk resources utilized by large requests for the cell disk.
CD_IO_UTIL_SM =>  [CELLDISK] The percentage of disk resources utilized by small requests for the cell disk.
FC_BY_ALLOCATED =>  [FLASHCACHE] The number of megabytes allocated in flash cache. Tracks how many cachelines are used in the flash cache. If the value is close to the flash cache size, then the flash cache is fully populated.
FC_BY_ALLOCATED_DIRTY =>  [FLASHCACHE] The number of megabytes allocated for unflushed data in flash cache.
FC_BY_ALLOCATED_OLTP =>  [FLASHCACHE] The number of megabytes allocated for OLTP data in flash cache.
FC_BY_DIRTY =>  [FLASHCACHE] The number of megabytes in flash cache that are not synchronized to the grid disks.
FC_BY_STALE_DIRTY =>  [FLASHCACHE] The number of megabytes in flash cache which cannot be synchronized because the cached disks are not accessible.
FC_BY_USED =>  [FLASHCACHE] The number of megabytes used in flash cache. Tracks the valid bytes in flash cache. For some workloads, like OLTP, the FC_BY_USED can be much less than the value of FC_BY_ALLOCATED because an OLTP write might only use 8K out of a 64K cacheline.
FC_BYKEEP_DIRTY =>  [FLASHCACHE] The number of megabytes allocated for unflushed keep objects in flash cache.
FC_BYKEEP_OLTP =>  [FLASHCACHE] The number of megabytes for OLTP keep objects in flash cache.
FC_BYKEEP_OVERWR =>  [FLASHCACHE] The number of megabytes pushed out of flash cache because of the space limit for keep objects.
FC_BYKEEP_OVERWR_SEC =>  [FLASHCACHE] The number of megabytes per second pushed out of flash cache because of space limit for keep objects.
FC_BYKEEP_USED =>  [FLASHCACHE] The number of megabytes used for keep objects on flash cache.
FC_COL_BY_USED =>  [FLASHCACHE] The number of megabytes used in columnar flash cache.
FC_COL_BYKEEP_USED =>  [FLASHCACHE] The number of megabytes used for keep objects in columnar flash cache.
FC_COL_IO_BY_R =>  [FLASHCACHE] The number of megabytes that were read from columnar flash cache.
FC_COL_IO_BY_R_ELIGIBLE =>  [FLASHCACHE] The number of megabytes eligible to read from columnar flash cache.
FC_COL_IO_BY_R_ELIGIBLE_SEC =>  [FLASHCACHE] The number of megabytes per second eligible to read from columnar flash cache.
FC_COL_IO_BY_R_SEC =>  [FLASHCACHE] The number of megabytes per second that were read from columnar flash cache.
FC_COL_IO_BY_SAVED =>  [FLASHCACHE] The number of megabytes saved by reads from columnar flash cache.
FC_COL_IO_BY_SAVED_SEC =>  [FLASHCACHE] The number of megabytes saved per second by reads from columnar flash cache.
FC_COL_IO_BY_W_POPULATE =>  [FLASHCACHE] The number of megabytes that are population writes into columnar flash cache due to read misses.
FC_COL_IO_BY_W_POPULATE_SEC =>  [FLASHCACHE] The number of megabytes per second that are population writes into columnar flash cache due to read misses.
FC_COL_IO_BYKEEP_R =>  [FLASHCACHE] The number of megabytes read from columnar flash cache for keep objects.
FC_COL_IO_BYKEEP_R_SEC =>  [FLASHCACHE] The number of megabytes read per second from columnar flash cache for keep objects.
FC_COL_IO_RQ_R =>  [FLASHCACHE] The number of requests that were read from columnar flash cache.
FC_COL_IO_RQ_R_ELIGIBLE =>  [FLASHCACHE] The number of read requests eligible for columnar flash cache.
FC_COL_IO_RQ_R_ELIGIBLE_SEC =>  [FLASHCACHE] The number of read requests per second eligible for columnar flash cache.
FC_COL_IO_RQ_R_SEC =>  [FLASHCACHE] The number of requests per second that were read from columnar flash cache.
FC_COL_IO_RQ_W_POPULATE =>  [FLASHCACHE] The number of requests that are population writers into columnar flash cache due to read misses.
FC_COL_IO_RQ_W_POPULATE_SEC =>  [FLASHCACHE] The number of requests per second that are population writes into columnar flash cache due to read misses.
FC_COL_IO_RQKEEP_R =>  [FLASHCACHE] The number of requests read for keep objects from columnar flash cache.
FC_COL_IO_RQKEEP_R_SEC =>  [FLASHCACHE] The number of requests read per second for keep objects from columnar flash cache.
FC_IO_BY_ALLOCATED_OLTP =>  [FLASHCACHE] The number of megabytes allocated for OLTP data in flash cache.
FC_IO_BY_DISK_WRITE =>  [FLASHCACHE] The number of megabytes written from flash cache to hard disks.
FC_IO_BY_DISK_WRITE_SEC =>  [FLASHCACHE] The number of megabytes per second written from flash cache to hard disks.
FC_IO_BY_R =>  [FLASHCACHE] The number of megabytes read from flash cache.
FC_IO_BY_R_ACTIVE_SECONDARY =>  [FLASHCACHE] The number of megabytes for active secondary reads satisfied from flash cache.
FC_IO_BY_R_ACTIVE_SECONDARY_MISS =>  [FLASHCACHE] The number of megabytes for active secondary reads not satisfied from flash cache.
FC_IO_BY_R_ACTIVE_SECONDARY_MISS_SEC =>  [FLASHCACHE] The number of megabytes per second for active secondary reads not satisfied from flash cache.
FC_IO_BY_R_ACTIVE_SECONDARY_SEC =>  [FLASHCACHE] The number of megabytes per second for active secondary reads satisfied from flash cache.
FC_IO_BY_R_DISK_WRITER =>  [FLASHCACHE] The number of megabytes read from flash cache by disk writer.
FC_IO_BY_R_DISK_WRITER_SEC =>  [FLASHCACHE] The number of megabytes per second read from flash cache by disk writer.
FC_IO_BY_R_DW =>  [FLASHCACHE] The number of megabytes of DW data read from flash cache.
FC_IO_BY_R_MISS =>  [FLASHCACHE] The number of megabytes read from disks because not all requested data was in flash cache.
FC_IO_BY_R_MISS_DW =>  [FLASHCACHE] The number of megabytes of DW data read from disks because not all requested data was in flash cache.
FC_IO_BY_R_MISS_SEC =>  [FLASHCACHE] The number of megabytes read from disks per second because not all requested data was in flash cache.
FC_IO_BY_R_SEC =>  [FLASHCACHE] The number of megabytes read per second from flash cache.
FC_IO_BY_R_SKIP =>  [FLASHCACHE] The number of megabytes read from disks for I/O requests that bypass flash cache.
FC_IO_BY_R_SKIP_FC_THROTTLE =>  [FLASHCACHE] The number of megabytes read from disk for I/O requests that bypass flash cache due to heavy load on flash cache.
FC_IO_BY_R_SKIP_FC_THROTTLE_SEC =>  [FLASHCACHE] The number of megabytes read per second from disk for I/O requests that bypass flash cache due to heavy load on flash cache.
FC_IO_BY_R_SKIP_LG =>  [FLASHCACHE] The number of megabytes read from disk for I/O requests that bypass flash cache due to the large I/O size.
FC_IO_BY_R_SKIP_LG_SEC =>  [FLASHCACHE] The number of megabytes read per second from disk for I/O requests that bypass flash cache due to the large I/O size.
FC_IO_BY_R_SKIP_NCMIRROR =>  [FLASHCACHE] The number of megabytes read from disk for I/O requests that bypass flash cache as the I/O is on non-primary, non-active secondary mirror.
FC_IO_BY_R_SKIP_SEC =>  [FLASHCACHE] The number of megabytes read from disks per second for I/O requests that bypass flash cache.
FC_IO_BY_W =>  [FLASHCACHE] The number of megabytes written to flash cache.
FC_IO_BY_W_DISK_WRITER =>  [FLASHCACHE] The number of megabytes written to hard disks by disk writer.
FC_IO_BY_W_DISK_WRITER_SEC =>  [FLASHCACHE] The number of megabytes per second written to hard disks by disk writer.
FC_IO_BY_W_FIRST =>  [FLASHCACHE] The number of megabytes that are first writes into flash cache.
FC_IO_BY_W_FIRST_SEC =>  [FLASHCACHE] The number of megabytes per second for first writes into flash cache.
FC_IO_BY_W_METADATA =>  [FLASHCACHE] The number of megabytes that are flash cache metadata writes
FC_IO_BY_W_METADATA_SEC =>  [FLASHCACHE] The number of megabytes per second that are flash cache metadata writes
FC_IO_BY_W_OVERWRITE =>  [FLASHCACHE] The number of megabytes that are overwrites into flash cache.
FC_IO_BY_W_OVERWRITE_SEC =>  [FLASHCACHE] The number of megabytes per second that are overwrites into flash cache.
FC_IO_BY_W_POPULATE =>  [FLASHCACHE] The number of megabytes for population writes into flash cache due to read misses.
FC_IO_BY_W_POPULATE_SEC =>  [FLASHCACHE] The number of megabytes per second that are population writes into flash cache due to read misses into flash cache.
FC_IO_BY_W_SEC =>  [FLASHCACHE] The number of megabytes per second written to flash cache.
FC_IO_BY_W_SKIP =>  [FLASHCACHE] The number of megabytes written to disk for I/O requests that bypass flash cache.
FC_IO_BY_W_SKIP_FC_THROTTLE =>  [FLASHCACHE] The number of megabytes written to disk for I/O requests that bypass flash cache due to heavy load on flash cache.
FC_IO_BY_W_SKIP_FC_THROTTLE_SEC =>  [FLASHCACHE] The number of megabytes written per second to disk for I/O requests that bypass flash cache due to heavy load on flash cache.
FC_IO_BY_W_SKIP_LG =>  [FLASHCACHE] The number of megabytes written to disk for I/O requests that bypass flash cache due to the large I/O size.
FC_IO_BY_W_SKIP_LG_SEC =>  [FLASHCACHE] The number of megabytes written per second to disk for I/O requests that bypass flash cache due to the large I/O size.
FC_IO_BY_W_SKIP_NCMIRROR =>  [FLASHCACHE] The number of megabytes written to disk for I/O requests that bypass flash cache as the I/O is on non-primary, non-active secondary mirror.
FC_IO_BY_W_SKIP_SEC =>  [FLASHCACHE] The number of megabytes written to disk per second for I/O requests that bypass flash cache.
FC_IO_BYKEEP_R =>  [FLASHCACHE] The number of megabytes read from flash cache for keep objects.
FC_IO_BYKEEP_R_SEC =>  [FLASHCACHE] The number of megabytes read per second from flash cache for keepobjects
FC_IO_BYKEEP_W =>  [FLASHCACHE] The number of megabytes written to flash cache for keep objects.
FC_IO_BYKEEP_W_SEC =>  [FLASHCACHE] The number of megabytes per second written to flash cache for keepobjects.
FC_IO_ERRS =>  [FLASHCACHE] The number of I/O errors on flash cache.
FC_IO_RQ_DISK_WRITE =>  [FLASHCACHE] The number of requests written from flash cache to hard disks.
FC_IO_RQ_DISK_WRITE_SEC =>  [FLASHCACHE] The number of requests per second for flash cache writing data to hard disks.
FC_IO_RQ_R =>  [FLASHCACHE] The number of read I/O requests satisfied from flash cache.
FC_IO_RQ_R_ACTIVE_SECONDARY =>  [FLASHCACHE] The number of requests for active secondary reads satisfied from flash cache.
FC_IO_RQ_R_ACTIVE_SECONDARY_MISS =>  [FLASHCACHE] The number of requests for active secondary reads not satisfied from flash cache.
FC_IO_RQ_R_ACTIVE_SECONDARY_MISS_SEC =>  [FLASHCACHE] The number of requests per second for active secondary reads not satisfied from flash cache.
FC_IO_RQ_R_ACTIVE_SECONDARY_SEC =>  [FLASHCACHE] The number of requests per second for active secondary reads satisfied from flash cache.
FC_IO_RQ_R_DISK_WRITER =>  [FLASHCACHE] The number of requests read from flash cache by disk writer.
FC_IO_RQ_R_DISK_WRITER_SEC =>  [FLASHCACHE] The number of requests per second read from flash cache by disk writer.
FC_IO_RQ_R_DW =>  [FLASHCACHE] The number of read I/O requests of DW data read from flash cache.
FC_IO_RQ_R_MISS =>  [FLASHCACHE] The number of read I/O requests which did not find all data in flash cache.
FC_IO_RQ_R_MISS_DW =>  [FLASHCACHE] The number of read I/O requests of DW data read from disks because not all requested data was in flash cache.
FC_IO_RQ_R_MISS_SEC =>  [FLASHCACHE] The number of read I/O requests per second which did not find all data in flash cache.
FC_IO_RQ_R_SEC =>  [FLASHCACHE] The number of read I/O requests satisfied per second from flash cache.
FC_IO_RQ_R_SKIP =>  [FLASHCACHE] The number of read I/O requests that bypass flash cache.
FC_IO_RQ_R_SKIP_FC_THROTTLE =>  [FLASHCACHE] The number of requests read from disk that bypass flash cache due to heavy load on flash cache.
FC_IO_RQ_R_SKIP_FC_THROTTLE_SEC =>  [FLASHCACHE] The number of requests per second read from disk that bypassed flash cache due to heavy load on flash cache.
FC_IO_RQ_R_SKIP_LG =>  [FLASHCACHE] The number of read I/O requests that bypass flash cache due to the large I/O size.
FC_IO_RQ_R_SKIP_LG_SEC =>  [FLASHCACHE] The number of read I/O requests per second that bypass flash cache due to the large I/O size.
FC_IO_RQ_R_SKIP_NCMIRROR =>  [FLASHCACHE] The number of requests read from disk that bypass flash cache as the I/O is on non-primary non-active secondary mirror.
FC_IO_RQ_R_SKIP_SEC =>  [FLASHCACHE] The number of read I/O requests per second that bypass flash cache.
FC_IO_RQ_REPLACEMENT_ATTEMPTED =>  [FLASHCACHE] The number of requests attempted to find space in the flash cache.
FC_IO_RQ_REPLACEMENT_DW_FAILED =>  [FLASHCACHE] Number of times that client DW IOs failed to find a replacement buffer
FC_IO_RQ_REPLACEMENT_DW_SUCCEEDED =>  [FLASHCACHE] Number of times that client DW IOs succeeded in finding a replacement buffer.
FC_IO_RQ_REPLACEMENT_OLTP_FAILED =>  [FLASHCACHE] Number of times that client OLTP IOs failed to find a replacement buffer.
FC_IO_RQ_REPLACEMENT_OLTP_SUCCEEDED =>  [FLASHCACHE] Number of times that client OLTP IOs succeeded in finding a replacement buffer.
FC_IO_RQ_REPLACEMENT_FAILED =>  [FLASHCACHE] The number of requests that failed to find space in the flash cache.
FC_IO_RQ_W =>  [FLASHCACHE] The number of I/O requests which resulted in flash cache being populated with data.
FC_IO_RQ_W_DISK_WRITER =>  [FLASHCACHE] The number of requests written to hard disks by disk writer.
FC_IO_RQ_W_DISK_WRITER_SEC =>  [FLASHCACHE] The number of requests per second written to hard disks by disk writer.
FC_IO_RQ_W_FIRST =>  [FLASHCACHE] The number of requests that are first writes into flash cache.
FC_IO_RQ_W_FIRST_SEC =>  [FLASHCACHE] The number of requests per second that are first writes into flash cache.
FC_IO_RQ_W_METADATA =>  [FLASHCACHE] The number of requests that are flash cache metadata writes
FC_IO_RQ_W_METADATA_SEC =>  [FLASHCACHE] The number of requests per second that are flash cache metadata writes
FC_IO_RQ_W_OVERWRITE =>  [FLASHCACHE] The number of requests that are overwrites into flash cache.
FC_IO_RQ_W_OVERWRITE_SEC =>  [FLASHCACHE] The number of requests per second that are overwrites into flash cache.
FC_IO_RQ_W_POPULATE =>  [FLASHCACHE] The number of requests that are population writes into flash cache due to read misses.
FC_IO_RQ_W_POPULATE_SEC =>  [FLASHCACHE] The number of requests per second that are population writes into flash cache due to read misses.
FC_IO_RQ_W_SEC =>  [FLASHCACHE] The number of I/O requests per second which resulted in flash cache being populated with data.
FC_IO_RQ_W_SKIP =>  [FLASHCACHE] The number of write I/O requests that bypass flash cache.
FC_IO_RQ_W_SKIP_FC_THROTTLE =>  [FLASHCACHE] The number of requests written to disk that bypass flash cache due to heavy load on flash cache.
FC_IO_RQ_W_SKIP_FC_THROTTLE_SEC =>  [FLASHCACHE] The number of requests written to disk per second that bypass flash cache due to heavy load on flash cache.
FC_IO_RQ_W_SKIP_LG =>  [FLASHCACHE] The number of requests written to disk that bypass flash cache due to the large I/O size.
FC_IO_RQ_W_SKIP_LG_SEC =>  [FLASHCACHE] The number of requests written to disk per second that bypass flash cache due to the large I/O size.
FC_IO_RQ_W_SKIP_NCMIRROR =>  [FLASHCACHE] The number of requests written to disk that bypass flash cache as the I/O is on non-primary, non-active secondary mirror.
FC_IO_RQ_W_SKIP_SEC =>  [FLASHCACHE] The number of write I/O requests per second that bypass flash cache.
FC_IO_RQKEEP_R =>  [FLASHCACHE] The number of read I/O requests for keep objects from flash cache.
FC_IO_RQKEEP_R_MISS =>  [FLASHCACHE] The number of read I/O requests for keep objects which did not find all data in flash cache.
FC_IO_RQKEEP_R_MISS_SEC =>  [FLASHCACHE] The number of read I/O requests per second for keep objects which did not find all data in flash cache.
FC_IO_RQKEEP_R_SEC =>  [FLASHCACHE] The number of read I/O requests per second for keep objects satisfied from flash cache.
FC_IO_RQKEEP_R_SKIP =>  [FLASHCACHE] The number of read I/O requests for keep objects that bypass flash cache.
FC_IO_RQKEEP_R_SKIP_SEC =>  [FLASHCACHE] The rate which is the number of read I/O requests per second for keepobjects that bypass flash cache.
FC_IO_RQKEEP_W =>  [FLASHCACHE] The number of I/O requests for keep objects which resulted in flash cache being populated with data.
FC_IO_RQKEEP_W_SEC =>  [FLASHCACHE] The number of I/O requests per second for keep objects which resulted in flash cache being populated with data.
FC_PREFETCH_HIT =>  [FLASHCACHE] The number of prefetch hits in flash cache. A hit means a page is prefetched and later used by a client for read or write. Once a prefetched page is hit, it is no longer marked as prefetched.
FC_PREFETCH_MISS =>  [FLASHCACHE] The number of prefetch misses in flash cache. A miss means a page is prefetched but never used by a client before the page is freed or reused.
FC_PREFETCH_RQ =>  [FLASHCACHE] The number of prefetch requests in flash cache.
FC_PREFETCH_SKIP =>  [FLASHCACHE] The number of prefetch requests skipped in flash cache. A prefetch request can be skipped if a prefetch disk IO is not issued due to error, throttling, or no buffer.
FC_PREFETCH_USED =>  [FLASHCACHE] The number of megabytes in flash cache holding prefetched pages that have not been used by client yet.
FL_ACTUAL_OUTLIERS =>  [FLASHLOG] The number of redo writes written to flash and disk that exceeded the outlier threshold
FL_BY_KEEP =>  [FLASHLOG] The number of redo data bytes saved on flash due to disk I/O errors
FL_DISK_FIRST =>  [FLASHLOG] The number of redo writes first written to disk
FL_DISK_IO_ERRS =>  [FLASHLOG] The number of disk I/O errors encountered by Exadata Smart Flash Log
FL_EFFICIENCY_PERCENTAGE =>  [FLASHLOG] The efficiency of Exadata Smart Flash Log expressed as a percentage
FL_EFFICIENCY_PERCENTAGE_HOUR =>  [FLASHLOG] The efficiency of Exadata Smart Flash Log over the past hour expressed as a percentage
FL_FLASH_FIRST =>  [FLASHLOG] The number of redo writes first written to flash
FL_FLASH_IO_ERRS =>  [FLASHLOG] The number of flash I/O errors encountered by Exadata Smart Flash Log
FL_FLASH_ONLY_OUTLIERS =>  [FLASHLOG] The number of redo writes written to flash that exceeded the outlier threshold.
FL_IO_DB_BY_W =>  [FLASHLOG] The number of megabytes written to hard disk by Exadata Smart Flash Log
FL_IO_DB_BY_W_SEC =>  [FLASHLOG] The number of megabytes written per second were written to hard disk by Exadata Smart Flash Log
FL_IO_FL_BY_W =>  [FLASHLOG] The number of megabytes written to flash by Exadata Smart Flash Log
FL_IO_FL_BY_W_SEC =>  [FLASHLOG] The number of megabytes written per second were written to flash by Exadata Smart Flash Log
FL_IO_TM_W =>  [FLASHLOG] Cumulative redo log write latency. It includes latency for requests not handled by Exadata Smart Flash Log.
FL_IO_TM_W_RQ =>  [FLASHLOG] Average redo log write latency. It includes write I/O latency only
FL_IO_W =>  [FLASHLOG] The number of writes serviced by Exadata Smart Flash Log
FL_IO_W_SKIP_BUSY =>  [FLASHLOG] The number of redo writes that bypassed Exadata Smart Flash Log because the flash log disks contained too much active data, which is data that has not yet been written to disk, or has been checkpointed by flash log.
FL_IO_W_SKIP_BUSY_MIN =>  [FLASHLOG] The number of redo writes during the last minute that could not be serviced by Exadata Smart Flash Log because too much data had not yet been written to disk.
FL_IO_W_SKIP_DISABLED_GD =>  [FLASHLOG] The number of times Exadata Smart Flash Log was disabled for the underlying grid disk, usually caused by recent write errors on that disk
FL_IO_W_SKIP_IORM_LIMIT =>  [FLASHLOG] The number of times IORM limit was reached for the disk containing the redo log
FL_IO_W_SKIP_IORM_PLAN =>  [FLASHLOG] The number of times the flash log was disabled in the IORM plan
FL_IO_W_SKIP_LARGE =>  [FLASHLOG] The number of large redo writes that could not be serviced by Exadata Smart Flash Log because the size of the data was larger than the amount of available space on any flash disk.
FL_IO_W_SKIP_LOG_ON_FLASH =>  [FLASHLOG] The number of times the redo log resided on flash (for systems that are not Extreme Flash systems)
FL_IO_W_SKIP_NO_BUFFER =>  [FLASHLOG] The metric shows the number of redo writes that could not be serviced by Exadata Smart Flash Log due to a lack of available buffers.
FL_IO_W_SKIP_NO_FL_DISKS =>  [FLASHLOG] The number of times there were no active flash log disks because the disks were inactive or unhealthy
FL_PREVENTED_OUTLIERS =>  [FLASHLOG] The number of redo writes written to disk that exceeded the outlier threshold. These writes would have been outliers if not for Exadata Smart Flash Log.
FL_RQ_TM_W =>  [FLASHLOG] Cumulative redo log write request latency. It includes networking and other overhead.
FL_RQ_TM_W_RQ =>  [FLASHLOG] Average redo log write request latency.
FL_RQ_W =>  [FLASHLOG] Total number of redo log write requests. It includes requests not handled by Exadata Smart Flash Log.
FL_SKIP_OUTLIERS =>  [FLASHLOG] The number of outliers when redo log write skips use of the flash log. The use of the flash log can be skipped because of FL_IO_W_SKIP_DISABLED_GD, FL_IO_W_SKIP_IORM_LIMIT, FL_IO_W_SKIP_IORM_PLAN, FL_IO_W_SKIP_LOG_ON_FLASH, or FL_IO_W_SKIP_NO_FL_DISKS.
DB_PC_BY_ALLOCATED =>  [PMEM] Number of megabytes allocated in PMEM cache for this database.
PC_BY_ALLOCATED =>  [PMEM] The number of megabytes allocated in PMEM cache. Tracks how many cachelines are used in the PMEM cache. If the value is close to the PMEM cache size, then the PMEM cache is fully populated.
PDB_PC_BY_ALLOCATED =>  [PMEM] Number of megabytes allocated in PMEM cache for this pluggable database (PDB).
===================================================
DW setttings;

cat > setparams.sh<<'EOF'
#cellcli -e 'alter iormplan objective=balanced'
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_cache_thrashing_detection_tolerance', 1)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_fc_lw_max_percentage', 70)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_fc_oltp_nonprio_resv_pcntg', 10)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_iorm_lw_flash_busy_threshold', 40)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_iorm_lw_flash_idle_hd_util_threshold',30)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_fc_disable_lw_flash_wear_heuristic', 'TRUE')\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_fc_datasync_hd_idle_wait_us', 50000)\""
cellcli -e $"alter cell events = \"immediate cellsrv.cellsrv_setparam('_cell_flashcache_dsync_jobs', 8)\""
v=`date +'%Y%m%d%H%M'`
cp /opt/oracle/cell/cellsrv/deploy/config/cellinit.ora /opt/oracle/cell/cellsrv/deploy/config/cellinit.ora.$v
echo "_cell_cache_thrashing_detection_tolerance=1">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_fc_oltp_nonprio_resv_pcntg=10">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_fc_lw_max_percentage=70">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_iorm_lw_flash_busy_threshold=40">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_iorm_lw_flash_idle_hd_util_threshold=30">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_fc_disable_lw_flash_wear_heuristic=TRUE">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_fc_datasync_hd_idle_wait_us=50000">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
echo "_cell_flashcache_dsync_jobs=8">>/opt/oracle/cell/cellsrv/deploy/config/cellinit.ora
EOF
dcli -g cells -l root -f setparams.sh
dcli -g cells -l root sh setparams.sh

====================================================
FlashCache: cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(Reset,0,0,0)"'      -- or 0,0,1
            cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(Resetstats,0,0,0)"' -- or 0,0,1
            cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumpStats,0,0,0)"'  -- or 0,0,1
			cellcli -e 'alter cell events="immediate cellsrv.cellsrv_flashcache(dumpheader, <addr1>, <addr2>, 1)'
			cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumpGroups,0,0,0)"' 
			cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumpobj,0,0,0)"' 
			cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumplru,0,0,0)"'  
			cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumplru,0,2,3)"' (where parameter=2 means medium-level dump, parameter=3 means for all lru lists.)
			cellcli -e 'alter cell events = "trace[cellsrv_flash_cache_layer] disk=high,memory=high"'
			cellcli -e 'alter cell events = "trace[cellsrv_flash_cache_layer] off"'
            alter cell events="trace[CELLSRV_Flash_Cache_Layer.*] disk=highest/default" --turn on/off
            --to fix large IO throttling which could cause 'direct path read'
            alter cell events = "cellsrv.cellsrv_iorm_ctl[MAX_LIO] opval=250"  --_cell_iorm_max_lio
            alter cell events = "cellsrv.cellsrv_iorm_ctl[WL_MODE] opval=1" --_cell_iorm_wl_mode
            alter cell events = "cellsrv.cellsrv_iorm_ctl[PERF_STATS] opval=1" --Collect IORM performance stats, set it back to 0 after several minutes
            cellcli -e $'alter cell events = "immediate cellsrv.cellsrv_setparam(\'_cell_oflsrv_fplib_passthru_timeout_msec\', 20000)"';
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_fc_toresilver_limit_chdrs', 390000)"; -Datasync starts at the condition of numElems>target to flush dirty data into hard disk
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_fc_datasync_hd_idle_wait_us', 50000)";
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_flashcache_dsync_jobs', 8)";
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_fc_datasync_max_iops', 120)";
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_fc_datasync_min_iops', 30)";
            alter cell events = "immediate cellsrv.cellsrv_setparam('_cell_cache_thrashing_detection_tolerance', 1)"; --95 to 1 to reduce temp io/large io latency due to spill to disk
                                                                     _cell_fc_row_allowlist
                                                                     _cell_fc_lw_max_row_age_in_sec
                                                                     _cell_iorm_lw_flash_busy_threshold --if the flash is utilized <_cell_iorm_lw_flash_busy_threshold(20%,not counting LW), will use _cell_iorm_lw_flash_idle_hd_util_threshold(50%) as the IORM disk busy threshold instead of 100%.
                                                                     _cell_fc_disable_lw_flash_wear_heuristic=TRUE --those 3 are to disable large write rejections due to max limit
                                                                     _cell_fc_lw_max_percentage=100  --0 to disable large write(tempsort) on FC
                                                                     _cell_fc_disable_lw_background_flush=TRUE --to disable datasync job
                                                                     _cell_fc_target_fraction_lw_to_replenish_per_scan
            cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_flashcache(dumpctdstats,0,0,0)"'; 
Storage Indexe:   cellcli -e 'alter cell events="immediate cellsrv.cellsrv_storidx('dumpridx','all',0, 0,0)"'
                  cellcli -e 'alter cell offloadgroupEvents = "immediate cellsrv.cellsrv_storidx(dumpridx,all, 0, 0, 0)"'
		          #1: dumpridx/purge/enable/disable
				  #2: all/<griddiskname>
				  #3: 0/<data_object_id>
				  #4: 0/<tablespace_id>
				  #5: 0/<unique dbid> (x$ksqdn.KSQDNGUNID)
Ramcache: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_ramcache(addstore,1,0,0)"'
          cellcli -e 'alter cell events="immediate cellsrv.cellsrv_ramcache(dumpstats, 0,0,1)"'
          cellcli -e 'alter cell events="immediate cellsrv.cellsrv_ramcache(dropstore,1,0,0)"'
resetstats  ：   cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_resetstats('all')"'  
                     or the items from: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump(list,0)"'
cellsrv_dump：   List all: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump(list,0)"'
                 dump all: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump(all,0)"'
                 system state dump: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_statedump(0|1|2,0)"'
                 Basic iostats: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('devio_stats',0)"'
                 IO latency: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('iolstats',0)"'
				             cellcli -e 'alter cell events="immediate cellsrv.cellsrv_resetstats(iolstats)"'
                 ioreasons:  cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('ioreasons',0)"'
				             cellcli -e 'alter cell events="immediate cellsrv.cellsrv_resetstats(ioreasons)"' 
				 PMMstats(passthrough): cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('mpp_stats',0)"'
				 Memory usage summary: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('memsummary',0)"'
				 SGA Memory Summary: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('sgaheapsummary',0)"'
				 SGA Memory Summary: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('pgaheap',0)"'
                 params : cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('cellparams',0)"' 
				          cellcli -e 'alter cell events="immediate cellsrv.cellsrv_setparam('_cell_io_hang_time','90')"' 
				 Predicate I/O: cellcli -e 'alter cell events="immediate cellsrv.cellsrv_dump('predicateio',0)"' 
				 Clear Stats: cellcli -e 'alter cell events = "immediate cellsrv.cellsrv_resetstats()"'
				 Trace: cellcli -e 'alter cell events='trace[cellsrv.cellsrv_events_layer] memory=highest,disk=highest''
				        cellcli -e 'alter cell events='trace[cellsrv.cellsrv_events_layer] off''
				 Boot Time: cellcli -e ''alter cell events="immediate cellsrv.cellsrv_dump(start_time,1)"''
