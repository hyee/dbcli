/*[[
    Show chart for dba_hist_latch. Usage: @@NAME {["<latch_name>"] [0|inst_id] [yymmddhh24mi] [yymmddhh24mi]} [-f"<filter>"]
    Impacted by settings: starttime,endtime,instance
    inst_id: Default as all instances, other options are:
                0         - Separate all instances
                a         - Group all instances
                <inst_id> - Only the specific instance
    -f       : User-defined filter. For example, -f"latch_name like '%XDB%'"
    --[[
        &V2     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &filter : default={1=1},f={}
    --]]
]]*/
{
    title='System Latch State Chart',
    _sql=[[
        WITH snap AS(
            SELECT a.*,
                   MAX(snap_id) over(PARTITION BY pkey ORDER BY etime RANGE BETWEEN UNBOUNDED PRECEDING AND diff PRECEDING) min_snap,
                   round(86400*(etime-LAG(etime,1,stime) OVER(PARTITION BY pkey ORDER BY snap_id))) secs
            FROM   (SELECT /*+no_merge no_expand no_or_expand opt_param('container_data' 'current_dictionary')*/ 
                           snap_id,
                           dbid,
                           instance_number,
                           instance_number inst_id,
                           begin_interval_time+0 btime,
                           end_interval_time+0 etime,
                           startup_time+0 stime,
                           (dbid+to_char(startup_time,'yymmddhh24mi'))*1e3+instance_number pkey,
                           (end_interval_time+0) - GREATEST(startup_time+0, MIN(end_interval_time+0) over(PARTITION BY dbid, instance_number,startup_time)) diff
                    FROM   dba_hist_snapshot
                    WHERE  dbid=:dbid
                     AND   end_interval_time+0 BETWEEN 
                           NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7) AND 
                           NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1)
                     AND  (:V2 IS NULL OR lower(:V2) IN ('0', 'a') OR instance_number = :V2)) a)
        SELECT time sample_time,event,
               a "Deviation%(Time/Avg)",
               round(v*1e-3,2) "Seconds per Second",
               round(gets,2) "Gets per Second",
               round(misses,2) "Misses per Second",
               round(sleeps,2) "Sleeps per Second",
               RNK_
        FROM   (SELECT to_char(MAX(etime), 'YYYY-MM-DD HH24:MI') TIME, event,
                       sum(v) v,100*avg(v/a)  a,
                       sum(gets/secs) gets,
                       sum(misses/secs) misses,
                       sum(sleeps/secs) sleeps,
                       stddev(sum(v/a)) over(partition by event) RNK_
                FROM  (SELECT /*+merge*/
                               A.*,
                               LATCH_NAME || decode(nvl(lower(:V2), 'a'), 'a', NULL, ' #' || inst_id) event,
                               wait_time/secs v,
                               avg(wait_time/secs) over(partition by inst_id,LATCH_NAME) a
                       FROM   (SELECT  inst_id, etime, LATCH_NAME, secs,
                                       wait_time - nvl(LAG(wait_time) OVER(PARTITION BY pkey, LATCH_NAME ORDER BY snap_id),0) wait_time,
                                       GETS - nvl(LAG(GETS) OVER(PARTITION BY pkey, LATCH_NAME ORDER BY snap_id),0) GETS,
                                       MISSES - nvl(LAG(MISSES) OVER(PARTITION BY pkey, LATCH_NAME ORDER BY snap_id),0) MISSES,
                                       SLEEPS - nvl(LAG(SLEEPS) OVER(PARTITION BY pkey, LATCH_NAME ORDER BY snap_id),0) SLEEPS
                               FROM   DBA_HIST_LATCH NATURAL JOIN snap
                               WHERE  (&filter)) a
                       WHERE  wait_time>0)
                 GROUP  BY event, etime) a
        WHERE  (v>0)
        ORDER  BY 1]],
    _pivot=true,
    labelsKMB=true,
}