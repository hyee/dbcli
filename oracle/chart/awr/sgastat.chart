/*[[
    Show chart for AWR SGA Stat. Usage: @@NAME [0|inst_id] [keyword] [yymmddhh24mi] [yymmddhh24mi] [-pool]
    Impacted by settings: starttime,endtime,instance.
    -pool: group by pool, otherwise group by name
    --[[
        &V1     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &pool   : default={name} pool={nvl(pool,'N/A')}
    --]]
]]*/
{
    title="SGA/PGA Memory Chart",
    _sql=[[
        WITH snap AS
         (SELECT /*+materialize no_expand*/
                trunc(end_interval_time + 0, 'mi') end_time, instance_number inst_id, dbid,
                ((end_interval_time + 0) - lead(end_interval_time + 0) OVER(PARTITION BY instance_number, startup_time ORDER BY snap_id desc)) * 86400 Slot_size,
                CASE WHEN end_interval_time+0 between NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7) AND NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1) THEN 0 END flag, 
                snap_id, instance_number, -9e8 * (startup_time + 0 - SYSDATE) + instance_number part_key
          FROM   dba_hist_snapshot
          WHERE  end_interval_time+0 between NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7)-1.2/24 AND NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1)
          AND    (:V1 IS NULL OR lower(:V1) IN ('0', 'a') OR instance_number = :V1)) 
        SELECT to_char(MAX(end_time), 'YYYY-MM-DD HH24:MI') sample_time, event, avg(sga_value) "Bytes"
        FROM   (SELECT a.*, name||decode(nvl(lower(:V1), 'a'), 'a', '', ' [#' || inst_id||']') event
                FROM   (SELECT *
                        FROM   snap NATURAL
                        NATURAL JOIN   (
                        SELECT snap_id, dbid, instance_number,&pool name, SUM(bytes) sga_value 
                        FROM dba_hist_sgastat 
                        WHERE :V2 IS NULL AND NAME!='free memory'
                        OR    :V2 IS NOT NULL AND instr(lower(pool|| ' '||name),lower(:v2))>0
                        GROUP BY snap_id, dbid, instance_number,&pool) SGA
                        ) a)
        GROUP BY event, end_time]],
    ylabel="Bytes",
    labelsKMG2=true
}