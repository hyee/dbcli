/*[[
    Show chart for dba_hist_librarycache. Usage: @@NAME {["<namespace>"] [0|inst_id] [yymmddhh24mi] [yymmddhh24mi]} [-f"<filter>"]
    Impacted by settings: starttime,endtime,instance
    inst_id: Default as all instances, other options are:
                0         - Separate all instances
                a         - Group all instances
                <inst_id> - Only the specific instance
    -f       : User-defined filter. For example, -f"latch_name like '%XDB%'"
    --[[
        &V2     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &filter : default={1=1},f={}
    --]]
]]*/
{
    _attrs=[[
        SELECT 'System Latch State Chart' title
        from dual]],
    _sql=[[
        WITH snap AS(
            SELECT a.*,
                   MAX(snap_id) over(PARTITION BY pkey ORDER BY etime RANGE BETWEEN UNBOUNDED PRECEDING AND diff PRECEDING) min_snap,
                   round(86400*(etime-LAG(etime,1,stime) OVER(PARTITION BY pkey ORDER BY snap_id))) secs
            FROM   (SELECT /*+no_merge no_expand no_or_expand*/ 
                           snap_id,
                           dbid,
                           instance_number,
                           instance_number inst_id,
                           begin_interval_time+0 btime,
                           MAX(end_interval_time+0) OVER(PARTITION BY snap_id) etime,
                           startup_time+0 stime,
                           (dbid+to_char(startup_time,'yymmddhh24mi'))*1e3+instance_number pkey,
                           (end_interval_time+0) - GREATEST(startup_time+0, MIN(end_interval_time+0) over(PARTITION BY dbid, instance_number,startup_time)) diff
                    FROM   dba_hist_snapshot
                    WHERE  dbid=:dbid
                     AND   end_interval_time+0 BETWEEN 
                           NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7) AND 
                           NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1)
                     AND  (:V2 IS NULL OR lower(:V2) IN ('0', 'a') OR instance_number = :V2)) a)
        SELECT to_char(etime,'YYYY-MM-DD HH24:MI') sample_time,namespace,
               round(sum(gets/secs),2) "Gets per Second",
               round(sum(PINS/secs),2) "Pins per Second",
               round(sum(GETHITS)*100/nullif(sum(GETS),0),2) "Gets Hit Ratio(%)",
               round(sum(PINHITS)*100/nullif(sum(PINS),0),2) "Pins Hit Ratio(%)"
        FROM   (SELECT /*+merge no_expand ordered_predicates*/
                      inst_id,etime,secs,namespace|| decode(nvl(lower(:V2), 'a'), 'a', NULL, ' #' || inst_id) namespace,
                      GETHITS - nvl(LAG(GETHITS) OVER(PARTITION BY pkey,namespace ORDER BY snap_id),0) GETHITS,
                      GETS - nvl(LAG(GETS) OVER(PARTITION BY pkey,namespace ORDER BY snap_id),0) GETS,
                      PINS - nvl(LAG(PINS) OVER(PARTITION BY pkey,namespace ORDER BY snap_id),0) PINS,
                      PINHITS - nvl(LAG(PINHITS) OVER(PARTITION BY pkey,namespace ORDER BY snap_id),0) PINHITS
               FROM   DBA_HIST_LIBRARYCACHE NATURAL JOIN snap
               WHERE  dbid=:dbid
               AND    (&filter)
               AND    (:V1 is null or upper(namespace) like upper('%&V1%'))) a
        WHERE  (GETS>0 OR PINS>0)
        GROUP  BY namespace, etime
        ORDER  BY 1]],
    _pivot=true,
    labelsKMB=true,
}