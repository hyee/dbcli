/*[[
    Show chart for dba_hist_sys_time_model. Usage: @@NAME {["<state_name>"] [0|inst_id] [yymmddhh24mi] [yymmddhh24mi]} [-sql|-f"<filter>"]
    Impacted by settings: starttime,endtime,instance
    inst_id: Default as all instances, other options are:
                0         - Separate all instances
                a         - Group all instances
                <inst_id> - Only the specific instance
    -f      : User-defined filter. For example, -f"stat_name like '%time%'"
    -sql    : Show stats related to SQL efficiency
    --[[
        &V2     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &filter : default={1=1},f={},sql={stat_name in ('sql execute elapsed time','PL/SQL execution elapsed time','parse time elapsed','hard parse elapsed time','soft parse time')}
    --]]
]]*/
{
    title="System OS Stats Chart",
    _sql=[[
        WITH snap AS(
            SELECT a.*,
                   MAX(snap_id) over(PARTITION BY pkey ORDER BY etime RANGE BETWEEN UNBOUNDED PRECEDING AND diff PRECEDING) min_snap,
                   round(86400*(etime-LAG(etime,1,stime) OVER(PARTITION BY pkey ORDER BY snap_id))) secs
            FROM   (SELECT /*+no_merge no_expand no_or_expand*/ 
                           snap_id,
                           dbid,
                           instance_number,
                           instance_number inst_id,
                           begin_interval_time+0 btime,
                           MAX(end_interval_time+0) OVER(PARTITION BY snap_id) etime,
                           startup_time+0 stime,
                           (dbid+to_char(startup_time,'yymmddhh24mi'))*1e3+instance_number pkey,
                           (end_interval_time+0) - GREATEST(startup_time+0, MIN(end_interval_time+0) over(PARTITION BY dbid, instance_number,startup_time)) diff
                    FROM   dba_hist_snapshot
                    WHERE  dbid=:dbid
                     AND   end_interval_time+0 BETWEEN 
                           NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7) AND 
                           NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1)
                     AND  (:V2 IS NULL OR lower(:V2) IN ('0', 'a') OR instance_number = :V2)) a)
        SELECT to_char(MAX(etime), 'YYYY-MM-DD HH24:MI') sample_time, event,round(sum(v*1e-6),2) "Seconds per OS Second"
        FROM  (SELECT /*+merge*/
                       A.*,
                       stat_name || decode(nvl(lower(:V2), 'a'), 'a', NULL, ' #' || inst_id) event,
                       value/secs v
               FROM   (SELECT /*+merge no_expand*/
                              inst_id,etime,secs,stat_name,
                              VALUE - nvl(LAG(VALUE) OVER(PARTITION BY pkey,stat_name ORDER BY snap_id),0) value
                       FROM   DBA_HIST_SYS_TIME_MODEL NATURAL JOIN snap
                       WHERE  DBID=:DBID
                       AND    (&filter)
                       AND    (:V1 is null and stat_name!='DB time' or :V1 IS NOT NULL AND upper(stat_name) like upper('%&V1%'))) a
               where nvl(value,0)>0 )
        GROUP  BY event, etime
        ORDER  BY 1]],
    _pivot=true,
    labelsSeparateLines=true,
    labelsKMB=true,
    height=400,
}