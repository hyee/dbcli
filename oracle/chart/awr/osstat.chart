/*[[
    Show chart for dba_hist_osstat. Usage: @@NAME {["<state_name>"] [0|inst_id] [yymmddhh24mi] [yymmddhh24mi]} [-f"<filter>"]
    Impacted by settings: starttime,endtime,instance
    inst_id: Default as all instances, other options are:
                0         - Separate all instances
                a         - Group all instances
                <inst_id> - Only the specific instance
    -f     : User-defined filter. For example, -f"stat_name like '%time%'"
    --[[
        &V2     : default={&INSTANCE}
        &V3     : default={&STARTTIME}
        &V4     : default={&ENDTIME}
        &filter : default={1=1},f={}
    --]]
]]*/
{
    title="System OS Stats Chart",
    _attrs=[[select case when lower(:V1) like '%time%' then 'Seconds' when lower(:V1) like '%byte%' then 'Bytes' else 'Value' end||' per Second' ylabel from dual]],
    _sql=[[
         WITH snap AS(
            SELECT a.*,
                   MAX(snap_id) over(PARTITION BY pkey ORDER BY etime RANGE BETWEEN UNBOUNDED PRECEDING AND diff PRECEDING) min_snap,
                   round(86400*(etime-LAG(etime,1,stime) OVER(PARTITION BY pkey ORDER BY snap_id))) secs
            FROM   (SELECT /*+no_merge no_expand no_or_expand*/ 
                           snap_id,
                           dbid,
                           instance_number,
                           instance_number inst_id,
                           begin_interval_time+0 btime,
                           MAX(end_interval_time+0) OVER(PARTITION BY snap_id) etime,
                           startup_time+0 stime,
                           (dbid+to_char(startup_time,'yymmddhh24mi'))*1e3+instance_number pkey,
                           (end_interval_time+0) - GREATEST(startup_time+0, MIN(end_interval_time+0) over(PARTITION BY dbid, instance_number,startup_time)) diff
                    FROM   dba_hist_snapshot
                    WHERE  dbid=:dbid
                     AND   end_interval_time+0 BETWEEN 
                           NVL(to_date(:V3,'yymmddhh24miss'),sysdate-7) AND 
                           NVL(to_date(:V4,'yymmddhh24miss'),sysdate+1)
                     AND  (:V2 IS NULL OR lower(:V2) IN ('0', 'a') OR instance_number = :V2)) a)
        SELECT time sample_time,event,v "Value per Second"
        FROM   (SELECT to_char(MAX(etime), 'YYYY-MM-DD HH24:MI') TIME, 
                       event||case when event||' ' like '% Time %' THEN '(Seconds)' END event,
                       round(sum(v)*case when event||' ' like '%TIME %' THEN 0.01 else 1 end,2) v
                FROM  (SELECT /*+merge*/
                               A.*,
                               initcap(replace(stat_name,'_',' '))|| decode(nvl(lower(:V2), 'a'), 'a', NULL, ' #' || inst_id) event,
                               value/greatest(1,flag1*secs)/case when stat_name like '%TIME%' THEN 100 ELSE 1 END v
                       FROM   (SELECT /*+merge no_expand ordered_predicates*/
                                      inst_id,
                                      etime,
                                      stat_name,
                                      secs,
                                      case when stat_id in(1,2,3,4,5,6,14,1009,1010) then 1 else 0 end flag1,
                                      VALUE - nvl(LAG(case when stat_id in(1,2,3,4,5,6,14,1009,1010) then VALUE else 0 end) OVER(PARTITION BY pkey,stat_name ORDER BY snap_id),0) value
                               FROM   dba_hist_osstat NATURAL JOIN snap
                               WHERE  dbid=:dbid and (&filter) and (:V1 IS NULL OR lower(stat_name) like lower('%&V1%'))) a
                       where value>0)
                 GROUP  BY event, etime) a
        WHERE  (v>0)
        ORDER  BY 1]],
    _pivot=true,
    labelsSeparateLines=true,
    labelsKMG2=true,
    height=400,
}