/*[[List the available event number that used by 'alter session set events' statement. Usage: @@NAME [filter] 

Sample Output:
==============
ORCL> ora events hash
    ORA-10092: CBO Disable hash join
    ORA-10093: CBO Enable force hash joins
    ORA-10103: CBO Disable hash join swapping
    ORA-10104: dump hash join statistics to trace file
    ORA-10118: CBO Enable hash join costing
    ORA-10172: CBO force hash join back
    ORA-10178: CBO turn off hash cluster filtering through memcmp
    ORA-10344: reserved for simulating object hash reorganization
    ORA-10386: parallel SQL hash and range statistics
    ORA-10874: Change max logfiles in hashtable in krfbVerifyRedoAvailable
    ORA-10986: donot use HASH_AJ in refresh
    ORA-13837: invalid HASH_VALUE
    ORA-13839: V$SQL row doesn't exist with given HASH_VALUE and ADDRESS.
    ORA-13847: The plan with plan hash value %s does not exist
    ORA-14176: this attribute may not be specified for a hash partition
    ORA-14177: STORE-IN (Tablespace list) can only be specified for a LOCAL index on a Hash or Composite Range Hash table
    ORA-14178: STORE IN (DEFAULT) clause is not supported for hash partitioned global indexes
    ORA-14192: cannot modify physical index attributes of a Hash index partition
    ORA-14242: table is not partitioned by System, or Hash method
    ORA-14243: table is not partitioned by Range, System, List, or Hash method
    ORA-14252: invalid ALTER TABLE MODIFY PARTITION option for a Hash partition
    ORA-14257: cannot move partition other than a Range, List, System, or Hash partition
    ORA-14259: table is not partitioned by Hash method
    ORA-14261: partition bound may not be specified when adding this Hash partition
    ORA-14269: cannot exchange partition other than a Range,List,System, or Hash partition
    ORA-14270: table is not partitioned by Range, System, Hash or List method
   --[[
        @ALIAS: err
   --]]
]]*/
set feed off
DECLARE
    err_msg  VARCHAR2(2000);
    filter varchar2(300):= LOWER(:V1);
    rtn      PLS_INTEGER;
    cnt      PLS_INTEGER:=0;
    mx       PLS_INTEGER:=65535;
    facility varchar2(30);
    strip    varchar2(30):='['||chr(10)||chr(13)||chr(9)||']+';
    TYPE t IS TABLE OF VARCHAR2(300) INDEX BY PLS_INTEGER;
    t1 t;

    function msg(code PLS_INTEGER) return varchar2 IS
    BEGIN
        rtn:=utl_lms.get_message(abs(code),'rdbms',nvl(facility,'ora'),'us',err_msg);
        return regexp_replace(err_msg,strip,' ');
    END;
BEGIN
    t1(60)   :='Detect deadlock (60 trace name hanganalyze level 4)';
    t1(10013):='Monitor transaction recovery';
    t1(10015):='Dump undo segment headers';
    t1(10019):='Disable the data / space search cache';
    t1(10021):='Trace state object tree cleanup operations';
    t1(10027):='Alter the output produced when an Ora-60 deadlock is encountered';
    t1(10029):='Allows you to trigger an event action at session creation. This is aliased to the LOGON event';
    t1(10032):='Dump sort statistics';
    t1(10035):='Record parse errors to the alert file';
    t1(10036):='Write SQL that will be shipped to a remote database to the trace file';
    t1(10037):='Write SQL that will be shipped to a remote database to the trace file';
    t1(10039):='Enables the firing of a specific action at the end of the type checking phase';
    t1(10046):='Used to enable SQL_TRACE=true functionality plus more information';
    t1(10047):='Used to help diagnose session switching errors';
    t1(10049):='Used to protect library cache heaps and perform various other library cache heap functions';
    t1(10050):='Trace process "sniping" by PMON when processes exceed profile limits';
    t1(10051):='Trace OPI calls';
    t1(10052):='Used to control SMON''s cleanup of non-existent objects';
    t1(10053):='See the inner workings of the cost based optimizer';
    t1(10060):='Dump the predicate tree generated by the optimizer';
    t1(10065):='Amend the dump of any library cache state object';
    t1(10072):='Enable latch recovery area memory protection';
    t1(10076):='Adjust the CBO''s costing of cartesian products';
    t1(10079):='Produce additional SQL*Net tracing';
    t1(10089):='Disable the CBO''s sorting of indexes which could cause "latch: row cache objects"';
    t1(10095):='Trace messages executed via oradebug';
    t1(10103):='Disable hash join swapping';
    t1(10104):='Dump the internal processing of hash joins to trace';
    t1(10127):='Disable the optimizer from generating certain type of remote query';
    t1(10128):='Dump partition pruning information';
    t1(10129):='Don''t lookup remote instance column statistics';
    t1(10132):='Dump the explain plan output of any executed SQL to a trace file';
    t1(10134):='Trace the new Oracle9i SQL memory management feature';
    t1(10136):='Disable the fix for bug 1089848';
    t1(10142):='Disable advanced OR-expansion checks';
    t1(10143):='Disable hints in SQL statements';
    t1(10145):='Simulate a SQL*Net error';
    t1(10157):='Disable the CBO''s use of the inlist iterator';
    t1(10165):='Mark processes so that they will abort automatically during a shutdown normal';
    t1(10166):='Trace operations made for [G]V$SESSION_LONGOPS operations';
    t1(10180):='Record SMON errors that occur when dropping temporary tables';
    t1(10186):='Disable index join functionality';
    t1(10187):='Reserved for index join related processing';
    t1(10188):='Reserved for index join related processing';
    t1(10191):='Reduce in-list memory consumption for certain classes of query';
    t1(10192):='Enable the fix for bug 1015032';
    t1(10194):='Disable the new LIKE selectivity heuristic';
    t1(10195):='Do not generate transitive predices from check constraints when using the CBO';
    t1(10196):='Disable the fix for bug 1089848';
    t1(10205):='Used to diagnose rowcache (dictionary cache) issues';
    t1(10209):='Simulate controlfile write error';
    t1(10214):='Simulate controlfile write error';
    t1(10222):='Used to diagnose rowcache (dictionary cache) issues';
    t1(10224):='Dump index block split/delete trace';
    t1(10226):='Trace rollback information being applied to get a CR block';
    t1(10227):='Verify row structure on insert and update';
    t1(10231):='Skip corrupted blocks on full table scan';
    t1(10235):='Check memory manager internal structures, used to diagnose heap corruptions';
    t1(10237):='Simulate CTRL-C interrupts';
    t1(10238):='Used to diagnose package instantiation issues';
    t1(10239):='Trace library cache operations execution across instances';
    t1(10246):='Track PMON''s actions';
    t1(10249):='Trace shared servers (MTS)';
    t1(10250):='Trace SGA allocations over a specified size';
    t1(10253):='(New)   Limit the size of the SQL text returned by x$kglna and x$kglna1';
    t1(10257):='Trace dead shared servers that have a timestamp for when they were told to terminate but have not yet terminated';
    t1(10261):='Used to help diagnose excessive PGA heap consumption';
    t1(10262):='Used to help detect (or disable) space leak errors with heap managed memory';
    t1(10267):='Adjust the amount of trace dumped under a "traditional" call stack dump';
    t1(10270):='Used to help diagnose cursor sharing issues';
    t1(10277):='Used to help diagnose cursor sharing issues';
    t1(10281):='Override the default timeout for spawning an Oracle process';
    t1(10281):='Produce additional recovery-related trace output';
    t1(10297):='Adjust the way in which the dictionary object cache is used';
    t1(10298):='Trace the generic layer''s file I/O operations';
    t1(10299):='Trace the buffer cache prefetch code';
    t1(10313):='Enable row CR under a non-RAC environment';
    t1(10319):='Trace PGA allocations';
    t1(10324):='Used to help diagnose redo log corruptions';
    t1(10328):='Ignore the error when we detect that the "first-to-mount" lock mechanism is broken';
    t1(10335):='Trace database open operations';
    t1(10337):='Supress schema name generation in slave SQL';
    t1(10340):='Check buffer cache is correct';
    t1(10343):='Simulate an Ora-4031 when we need to allocate a new active checkpoint entry';
    t1(10347):='Dump the active checkpoint queue on each checkpoint';
    t1(10354):='Used to disable serial direct reads';
    t1(10355):='Used to enable serial direct reads';
    t1(10364):='Enables extra diagnostic trace to trap Ora-600 [25012] errors on insert and attempts to correct them';
    t1(10366):='When dumping a block in the buffer cache attempt to dump a formatted dump rather than a hex dump';
    t1(10400):='Shutdown debugging';
    t1(10420):='Trace process / thread operations (e.g. creation)';
    t1(10422):='Alter some KSU operations or enable additional KSU tracing';
    t1(10423):='Trace Oracle errors that are caught and handled within Oracle exception handler code';
    t1(10424):='Influence the behaviour of clearing an ORA-28 in an Oracle exception handler code';
    t1(10441):='Event to influence hang manager behaviour';
    t1(10445):='Trace LMS process';
    t1(10499):='Revert to old scale behaviour';
    t1(10500):='SMON tracing';
    t1(10501):='Additional heap checking event';
    t1(10503):='Allows one to override the bind length graduation scheme for character bind values';
    t1(10509):='Additional KGHU heap checking event';
    t1(10519):='Allow the use of ALTER TYPE .. RESET';
    t1(10520):='Reduces the number of unnecessary recompilations for views';
    t1(10523):='This disables an optimization when we are creating a package or type and we are using the "CREATE OR REPLACE" syntax';
    t1(10590):='to complete';
    t1(10600):='Used to diagnose frame corruptions';
    t1(10601):='Used in conjunction with the literal replacement feature';
    t1(10602):='Used to force a process to core dump. This is used to test the stack dump processing.';
    t1(10624):='Avoid invalidation of views when an index is dropped';
    t1(10627):='Used to force a treedump to dump index leaf block contents.';
    t1(10629):='Change online index rebuild locking behaviour';
    t1(10639):='Dump the librarycache if we encounter an Ora-600 [kksfbc-reparse-infinite-loop]';
    t1(10690):='If we are dumping a core file in a non-background process then potentially adjust how much gets dumped.';
    t1(10691):='If we are dumping a core file in a background process (Eg SMON) then potentially adjust how much gets dumped.';
    t1(10692):='Invoke oradbg when a process tries to dump a call stack';
    t1(10704):='Used to trace lock operations';
    t1(10706):='Used to trace cross-instance lock operations';
    t1(10708):='Used to trace lock operations (useful for CR server)';
    t1(10720):='Trace resource management actions';
    t1(10724):='Trace cross-instance broadcast layer';
    t1(10730):='Used to trace row level security / fine grained access predicate generation';
    t1(10755):='Trace Ora-1551 stacks';
    t1(10756):='Trace savepoints / autotxns';
    t1(10786):='Dump callstack at each pop / push of a call';
    t1(10795):='Disable VKTM tracing';
    t1(10800):='Used to debug DBMS_LOCK failures';
    t1(10808):='Flag wait events which do not specify a reason';
    t1(10809):='Used to diagnose state object problems';
    t1(10840):='Used to trace whether a PLSQL function that is invoked from SQL makes use of a cache or not';
    t1(10850):='Used to trace Advanced Queueing (AQ) QMNx operations';
    t1(10859):='Disable the maintenance of the retry_count field as used in Advanced Queueing (AQ)';
    t1(10862):='Change default schema resolution for AQ enqueue and dequeue actions';
    t1(10890):='Simulate errors under ADG (if set on server) or perform additional checks for valid numbers (if set on client).';
    t1(10905):='Sanity check on buffer cache during creation of new extents';
    t1(10913):='Force locally managed SYSTEM tablespace if compatible >= 9.2';
    t1(10932):='Used to alter PLSQL behaviour';
    t1(10934):='Used to alter PLSQL behaviour';
    t1(10936):='Used to alter PLSQL behaviour';
    t1(10943):='Used to alter PLSQL behaviour';
    t1(10998):='Force systemstates to dump a short callstack as well';
    t1(14534):='Avoid reads of unanalyzed partitioned table/index extent maps';
    t1(17614):='Assume pre-allocation is required during file creation';
    t1(22824):='Enable use of DDFNET instead of KGLR when dealing with snapshots or materialized views';
    t1(22827):='(New)   Enable use of KGLR instead of DDFNET for certain operations.';
    t1(24040):='Used to help diagnose problems with AQ propagation';
    t1(25475):='Allows one to override some error messages raised by the AQ rules engine';
    t1(27605):='Level 0x2000 will disable Exadata RamCache from db side, and 128 to disable KCIFS reconnect diag trace when smart scan switches to block IO';
    t1(28131):='Disable the check to see whether the fine grained access control feature is enabled or not';
    t1(28266):='Used to trace the use of SYS_CONTEXT';
    t1(29724):='Enable additional LMHB (heartbeat) dumps under RAC';
    t1(30019):='When we suppress unsupported commands executed against system managed undo record this fact to the alert log';
    t1(30061):='KTC layer debug event';
    t1(38003):='Avoid marking some non-bootstrap objects as bootstrap objects';
    t1(38039):='Re-order predicates';
    t1(43810):='Enables skipping of corrupt index blocks during index scan operations';
    t1(43810):='Reduce HW contention for ASSM managed LOB segments';
    t1(55570):='A general purpose transaction management layer event.';
    t1(106001):='Used with one-off backports of the _cursor_obsolete_threshold fix for 11g releases';
    t1(7254729):='Enable additional checking to try to catch the cause of Ora-600 [kksfbc-reparse-infinite-loop] errors earlier';
    t1(7302049):='Enable additional KGL state object checking';
    t1(16233344):='(New)Supress trace output when purging a cursor using dbms_shared_pool.purge()';
    IF filter IS NULL THEN
        filter:='%';
        mx:=65531;
    ELSE
        IF regexp_like(filter,'\d+$') THEN
            facility := nvl(regexp_substr(filter,'^[a-zA-Z]+'),'ora');
            dbms_output.put_line(upper(facility)||'-'||regexp_substr(filter,'\d+$')||': '||msg(regexp_substr(filter,'\d+$')));
            IF t1.exists(0+filter) THEN
                dbms_output.put_line('EVT-'||regexp_substr(filter,'\d+$')||': '||t1(0+filter));
            END IF;
            RETURN;
        END IF;
        filter:='%'||lower(filter)||'%';
    END IF;
    dbms_output.enable(null);
    FOR err_num IN 10000 .. mx LOOP
        err_msg := msg(err_num);
        IF err_msg LIKE '%Message ' || err_num || ' not found%' THEN
            err_msg := '';
        END IF;
        IF t1.exists(err_num) THEN
            err_msg := err_msg|| chr(10) || lpad(' ',11)|| t1(err_num);
        END IF;

        IF lower(err_msg) LIKE filter THEN
            dbms_output.put_line('ORA-'||err_num||': ' ||err_msg);
            cnt := cnt +1;
        END IF;
    END LOOP;
    dbms_output.put_line(chr(10)||cnt||' events matched.');
END;
/

