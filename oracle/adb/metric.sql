/*[[Show pdb resource metrics. Usage: @@NAME]]*/
COL "CPU_UTIL|LIMIT,CPU|UTIL" for pct2
COL "SGA|SIZE,DB|CACHE,SHARED|POOL,PGA|SIZE,MBPS|THROT,MBPS|TOTAL,MB|IO" FOR KMG2
COL "IOPS|TOTAL,IOPS|THROT,AVG|THROT" FOR TMB2
COL "CPU|CONSUME,CPU|QUEUE" FOR msmhd2
COL grp break -
SET AUTOHIDE COL
SELECT grp,
       inst_id inst,con_id con,max(a.name) name,
       '|' "|",
       AVG(NUM_CPUS) "NUM|CPUS",
       NULLIF(MAX(CPU_UTILIZATION_LIMIT) KEEP(DENSE_RANK LAST ORDER BY END_TIME),100)/100 "CPU|LIMIT",
       NULLIF(SUM(AVG_CPU_UTILIZATION*CPU_CONSUMED_TIME)/NULLIF(SUM(CPU_CONSUMED_TIME),0)/100,0) "CPU|UTIL",
       NULLIF(AVG(CPU_CONSUMED_TIME),0) "CPU|CONSUME",
       NULLIF(AVG(CPU_WAIT_TIME),0) "CPU|QUEUE",
       '|' "|",
       NULLIF(MAX(RUNNING_SESSIONS_LIMIT) KEEP(DENSE_RANK LAST ORDER BY END_TIME),0) "SESS|LIMIT",
       NULLIF(ROUND(AVG(AVG_RUNNING_SESSIONS),2),0) "SESS|RUN",
       NULLIF(ROUND(AVG(AVG_WAITING_SESSIONS),2),0) "SESS|QUEUE",
       '|' "|",
       AVG(SGA_BYTES) "SGA|SIZE",
       AVG(BUFFER_CACHE_BYTES) "DB|CACHE",
       AVG(SHARED_POOL_BYTES) "SHARED|POOL",
       NULLIF(AVG(PGA_BYTES),0) "PGA|SIZE",
       '|' "|",
       NULLIF(AVG(IOPS),0) "IOPS|TOTAL",
       NULLIF(AVG(IOPS_THROTTLE_EXEMPT),0) "IOPS|THROT",
       NULLIF(AVG(AVG_IO_THROTTLE),0) "AVG|THROT",
       NULLIF(AVG(IOMBPS*1024*1024),0) "MBPS|TOTAL",
       NULLIF(AVG(IOMBPS_THROTTLE_EXEMPT*1024*1024),0) "MBPS|THROT",
       NULLIF(SUM(IOMBPS_THROTTLE_EXEMPT*1024*1024)/NULLIF(SUM(IOPS),0),0) "MB|IO",
       '|' "|",
       NULLIF(ROUND(AVG(AVG_ACTIVE_PARALLEL_STMTS),2),0) "PX_STMT|ACTIVES",
       NULLIF(ROUND(AVG(AVG_QUEUED_PARALLEL_STMTS),2),0) "PX_STMT|QUEUES",
       NULLIF(ROUND(AVG(AVG_ACTIVE_PARALLEL_SERVERS),2),0) "PX_PROC|ACTIVES",
       NULLIF(ROUND(AVG(AVG_QUEUED_PARALLEL_SERVERS),2),0) "PX_PROC|QUEUES",
       MAX(PARALLEL_SERVERS_LIMIT) KEEP(DENSE_RANK LAST ORDER BY END_TIME) "PX_PROC|IMIT",
       '|' "|",
       MAX(B.PLAN_NAME) KEEP(DENSE_RANK LAST ORDER BY END_TIME) "RM|PLAN"
FROM gv$pdbs a 
join (SELECT 'Current' grp,a.* from gv$rsrcpdbmetric a UNION ALL SELECT 'History',a.* from gv$rsrcpdbmetric_history a) b 
using(inst_id,con_id)
GROUP BY grp,inst_id,con_id
ORDER BY 1 desc,name,3,2